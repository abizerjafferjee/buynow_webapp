{"version":3,"sources":["assets/images sync /^/.*$","assets/images/crayfish.png","assets/images/daniel.jpg","assets/images/elliot.jpg","assets/images/matthew.png","helpers/Helpers.js","components/Show.js","actions/Panel.js","constants/ActionTypes.js","components/ShowList.js","constants/Common.js","actions/Shows.js","actions/Stripe.js","actions/Cart.js","containers/Home.js","components/Account.js","components/Order.js","components/TicketList.js","components/Profile.js","actions/Auth.js","actions/Tickets.js","containers/AccountPage.js","actions/Account.js","components/Cart.js","containers/CartPage.js","constants/Stripe.js","containers/SlidingPanePage.js","containers/ShowPane.js","containers/LivePage.js","containers/Player.js","components/Navs/Header.js","components/Navs/Footer.js","components/Confirm.js","containers/App.js","reducers/Shows.js","reducers/Auth.js","reducers/Cart.js","reducers/Account.js","reducers/Stripe.js","reducers/Panel.js","reducers/Tickets.js","reducers/index.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","prettyShowTime","showDateTime","showTime","Date","setSeconds","toUTCString","connect","state","panel","setShowDisplay","dispatch","type","payload","setShowPanel","props","useState","Card","className","onClick","showId","show","Header","title","Image","style","borderRadius","src","require","image_path","ui","Content","Description","fontFamily","color","fontSize","genre","artists","length","value","index","key","name","show_datetime","ShowList","itemsPerRow","w","window","outerWidth","showList","_","shows","addToCart","Group","border","serverUrl","fetchShows","fetch","then","response","json","data","catch","error","fetchShowsFailure","stripePaymentStatus","status","clearStripe","localStorage","removeItem","quantity","useEffect","Account","usernameOrEmail","setUsernameOrEmail","password","setPassword","username","setUsername","email","setEmail","signupPassword","setSignupPassword","confirmPassword","setConfirmPassword","showSignIn","setShowSignIn","handleToggleForms","handleLoginOnChange","target","handleSignupOnChange","auth","loading","Loader","active","Message","Form","Input","icon","iconPosition","label","placeholder","onChange","Button","primary","preventDefault","login","content","labelPosition","createUser","userSignupRequest","href","Order","TicketList","setShows","undefined","tickets","showIds","i","includes","push","getUniqueShows","items","Item","size","as","Meta","filter","ticket","List","divided","relaxed","Link","to","uuid","getTickets","itemList","Profile","info","user","float","logout","inverted","dividing","Divider","loginSuccess","setAuthorizationToken","token","axios","defaults","headers","common","fetchTickets","get","res","err","ownProps","orders","account","loginRequest","post","setItem","jwtDecode","console","log","loginFailure","userInfo","fetchOrders","isAuthenticated","history","Cart","totalPrice","cart","element","show_price","Extra","circular","handleRemoveItem","handleAddQuantity","handleRemoveQuantity","cartEmptyMessage","basic","pointing","toFixed","floated","disabled","submit","stripePromise","loadStripe","stripe","removeFromCart","clearCart","placeOrder","showsArr","pricesArr","quantitiesArr","forEach","quantities","prices","total_price","orderId","checkoutId","stripe_session","setStripeCheckout","setLoading","a","redirectToCheckout","sessionId","result","stripeCheckout","accountPlaceHolder","handleTogglePane","Dimmer","item","stopPropagation","SlidingPanePage","Grid","width","Row","Column","fluid","Segment","description","visible","Icon","centered","columns","Field","Player","Navbar","initialShows","setInitialShows","Menu","secondary","header","position","Label","zIndex","floating","itemsInCartCount","Footer","updatePaymentStatus","payment_status","patch","errorMessage","setErrorMessage","useParams","getItem","setTimeout","Container","textAlign","ReactGA","initialize","process","REACT_APP_GA_CODE","filterShows","checkAuthorizationToken","renewAuthorizationToken","non_field_errors","showSearch","setShowSearch","isPaneOpen","setPaneOpen","paneComponent","setPaneComponent","focusShow","setFocusShow","location","useLocation","togglePane","componentName","page","pathname","set","pageview","trackPage","jwtToken","obj","exact","path","component","Home","Confirm","LivePage","overlayClassName","isOpen","subtitle","onRequestClose","hideHeader","children","action","isLoading","initialState","isEmpty","newState","slice","shortid","generate","idx","findIndex","rootReducer","combineReducers","Boolean","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b4569021.chunk.js","sourcesContent":["var map = {\n\t\"./crayfish.png\": 361,\n\t\"./daniel.jpg\": 362,\n\t\"./elliot.jpg\": 363,\n\t\"./matthew.png\": 364\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 100;","module.exports = __webpack_public_path__ + \"static/media/crayfish.1f9c6466.png\";","module.exports = __webpack_public_path__ + \"static/media/daniel.fcfe2bd1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elliot.432d61fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/matthew.046e91f7.png\";","export function prettyShowTime(showDateTime) {\r\n    const showTime = new Date(showDateTime)\r\n    showTime.setSeconds(0,0)\r\n    return showTime.toUTCString()\r\n}","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Modal, Card, Image, Rating, Grid, Header, Divider, Button, Input, Icon, Segment } from 'semantic-ui-react'\r\nimport toastr from 'toastr'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {prettyShowTime} from '../helpers/Helpers'\r\nimport {setShowDisplay} from '../actions/Panel' \r\n\r\nfunction Show(props) {\r\n\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    function handleAddToCart() {\r\n        props.addToCart(props.show, quantity)\r\n        console.log(`Added <b>${props.show.title}</b> into shopping-cart.`)\r\n    }\r\n\r\n    function handleShowPane(showId) {\r\n        props.setShowDisplay(showId)\r\n        // props.handleTogglePane('show')\r\n    }\r\n\r\n    const fontStyle = {\r\n        fontFamily: 'Russo One, sans-serif',\r\n        color: 'white',\r\n        fontSize: '20px'\r\n    }\r\n\r\n    const imgStyle = {\r\n        borderRadius: '5%'\r\n    }\r\n\r\n    return (\r\n            <Card className=\"card_background my-5 card_text\" onClick={() => handleShowPane(props.show.id)}>\r\n                <Card.Header className=\"p-2\">{props.show.title}</Card.Header>\r\n                <Image className='card_image' style={imgStyle} src={require(`../assets/images/${props.show.image_path}`)} ui={false} />\r\n                <Card.Content>\r\n                    <Card.Description style={fontStyle}>\r\n                        {props.show.genre} \r\n                        { \r\n                            props.show.artists.length > 0 && \r\n                            <> | &nbsp;\r\n                                { props.show.artists.map((value, index) => {\r\n                                    const tag = index === props.show.artists.length-1 ? <span key={index}>{value.name}</span> : <span key={index}>{value.name}, </span>\r\n                                    return tag \r\n                                })} \r\n                            </>\r\n                        }\r\n                        <br></br>\r\n                        <small>\r\n                            {prettyShowTime(props.show.show_datetime)}\r\n                        </small>\r\n                    </Card.Description>\r\n            </Card.Content>\r\n            {/* <Card.Content extra>\r\n            <Header floated='left' as='h4'>USD { props.show.show_price }</Header>\r\n            <Button floated='right' onClick={handleAddToCart}>\r\n                <Button.Content visible>\r\n                    <Icon name='shop' />\r\n                </Button.Content>\r\n            </Button>\r\n            </Card.Content> */}\r\n        </Card>\r\n    )\r\n}\r\n\r\nShow.propTypes = {\r\n    show: PropTypes.object.isRequired,\r\n    addToCart: PropTypes.func.isRequired,\r\n    panel: PropTypes.object.isRequired,\r\n    setShowDisplay: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        panel: state.panel\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setShowDisplay})(Show)","import { SET_SHOW } from '../constants/ActionTypes'\r\n\r\nexport const setShowPanel = (id) => {\r\n    return {\r\n        type: SET_SHOW,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const setShowDisplay = (id) => {\r\n    return dispatch => {\r\n        dispatch(setShowPanel(id))\r\n    }\r\n}","export const FETCH_SHOWS_REQUEST = 'FETCH_SHOWS_REQUEST'\r\nexport const FETCH_SHOWS_SUCCESS = 'FETCH_SHOWS_SUCCESS'\r\nexport const FETCH_SHOWS_FAILURE = 'FETCH_SHOWS_FAILURE'\r\nexport const FILTER_SHOWS = 'FILTER_SHOWS'\r\n\r\nexport const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\r\nexport const CLEAR_CART = 'CLEAR_CART'\r\n\r\nexport const SET_STRIPE_CHECKOUT = 'SET_STRIPE_CHECKOUT'\r\nexport const CLEAR_STRIPE = 'CLEAR_STRIPE'\r\nexport const SET_PAYMENT_STATUS = 'SET_PAYMENT_STATUS'\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\n\r\nexport const SET_BILLING_OPTIONS = 'SET_BILLING_OPTIONS'\r\nexport const CLEAR_BILLING_OPTIONS = 'CLEAR_BILLING_OPTIONS'\r\n\r\nexport const FETCH_ORDERS_REQUEST = 'FETCH_ORDERS_REQUEST'\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\r\nexport const FETCH_ORDERS_FAILURE = 'FETCH_ORDERS_FAILURE'\r\n\r\nexport const FETCH_TICKETS_REQUEST = 'FETCH_TICKETS_REQUEST'\r\nexport const FETCH_TICKETS_SUCCESS = 'FETCH_TICKETS_SUCCESS'\r\nexport const FETCH_TICKETS_FAILURE = 'FETCH_TICKETS_FAILURE'\r\n\r\nexport const SET_SHOW = 'SET_SHOW'","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { Card } from 'semantic-ui-react'\r\n\r\nimport Show from './Show'\r\n\r\nfunction ShowList(props) {\r\n\r\n    var itemsPerRow = 6\r\n    const w = window.outerWidth\r\n\r\n    if (w >= 1500) {\r\n        itemsPerRow = 5\r\n    } else if (w >= 750 && w <= 1500) {\r\n        itemsPerRow = 3\r\n    } else {\r\n        itemsPerRow = 1\r\n    }\r\n\r\n    let showList = _.map(props.shows, (show, index) => {\r\n        return (\r\n            <Show key={index} show={show} addToCart={props.addToCart} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Card.Group className=\"py-5\" itemsPerRow={itemsPerRow} style={{border:'none'}}>\r\n            {showList}\r\n        </Card.Group>\r\n    )\r\n}\r\n\r\nShowList.propTypes = {\r\n    shows: PropTypes.array,\r\n    addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ShowList","export const TOASTR_OPTIONS = {\r\n    closeButton: true,\r\n    preventDuplicated: true,\r\n    positionClass: 'toast-bottom-left'\r\n}\r\n\r\nexport const serverUrl = 'http://35.183.44.167'","import { FETCH_SHOWS_REQUEST, FETCH_SHOWS_SUCCESS, FETCH_SHOWS_FAILURE, FILTER_SHOWS } from '../constants/ActionTypes'\r\n\r\n// const serverUrl = 'http://localhost:8000'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const fetchShowsRequest = () => {\r\n    return {\r\n        type: FETCH_SHOWS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchShowsSuccess = (shows) => {\r\n    return {\r\n        type: FETCH_SHOWS_SUCCESS,\r\n        payload: shows\r\n    }\r\n}\r\n\r\nexport const fetchShowsFailure = (error) => {\r\n    return {\r\n        type: FETCH_SHOWS_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchShows = () => {\r\n    return dispatch => {\r\n        dispatch(fetchShowsRequest())\r\n        fetch(`${serverUrl}/shows/show/`)\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((data) => {\r\n                dispatch(fetchShowsSuccess(data))\r\n            })\r\n            .catch((error) => {\r\n                dispatch(fetchShowsFailure(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const filterShows = (shows) => {\r\n    return {\r\n        type: FILTER_SHOWS,\r\n        payload: shows\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nimport { SET_STRIPE_CHECKOUT, SET_PAYMENT_STATUS, CLEAR_STRIPE } from '../constants/ActionTypes'\r\nimport { clearCart } from './Cart'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const setStripeCheckout = (checkoutId) => {\r\n    return {\r\n        type: SET_STRIPE_CHECKOUT,\r\n        payload: {\r\n            checkoutId: checkoutId\r\n        }\r\n    }\r\n}\r\n\r\nexport const stripePaymentStatus = (status) => {\r\n    return {\r\n        type: SET_PAYMENT_STATUS,\r\n        payload: status\r\n    }\r\n}\r\n\r\nexport const clearStripe = () => {\r\n    localStorage.removeItem('orderId')\r\n    return {\r\n        type: CLEAR_STRIPE\r\n    }\r\n}\r\n\r\nexport const updatePaymentStatus = (orderId, payment_status) => {\r\n    return dispatch => {\r\n        axios.patch(`${serverUrl}/shows/order/${orderId}/`, {payment_status: payment_status})\r\n            .then((res) => {\r\n                if (payment_status === 2) {\r\n                    dispatch(stripePaymentStatus(true))\r\n                } else if (payment_status === 3) {\r\n                    dispatch(clearStripe())\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (payment_status === 2) {\r\n                    dispatch(stripePaymentStatus(false))\r\n                } else {\r\n                    console.log('something went wrong...update the status of order to cancelled')\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n// export const deleteOrder = (orderId) => {\r\n//     return dispatch => {\r\n//         axios.patch(`/shows/order/${orderId}/`, {payment_status: 2})\r\n//             .then((res) => {\r\n//                 console.log('successful')\r\n//             })\r\n//             .catch((err) => {\r\n//                 console.log(err)\r\n//                 console.log('something went wrong on our side. please contact support to get it resolved. Sorry for the inconvenience.')\r\n//             })\r\n//     }\r\n// }","import axios from 'axios'\r\nimport _ from 'lodash'\r\nimport toastr from 'toastr'\r\n\r\nimport { setStripeCheckout } from './Stripe'\r\nimport { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from '../constants/ActionTypes'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const addToCart = (show, quantity) => {\r\n    return {\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            show: show,\r\n            quantity: quantity\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return {\r\n        type: REMOVE_FROM_CART,\r\n        payload: {\r\n            id: id\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: CLEAR_CART\r\n    }\r\n}\r\n\r\nexport const placeOrder = (items) => {\r\n    return dispatch => {\r\n        let totalPrice = 0\r\n        let showsArr = []\r\n        let pricesArr = []\r\n        let quantitiesArr = []\r\n\r\n        _.forEach(items, (element) => {\r\n            totalPrice += element.show.show_price * element.quantity\r\n            showsArr.push(element.show.title)\r\n            pricesArr.push(element.show.show_price)\r\n            quantitiesArr.push(element.quantity)\r\n        })\r\n\r\n        axios.post(`${serverUrl}/shows/order/`, {shows: showsArr, quantities: quantitiesArr, prices: pricesArr, total_price: totalPrice.toFixed(2)})\r\n            .then((res) => {\r\n                const orderId = res.data.id\r\n                const checkoutId = res.data.stripe_session.id\r\n                localStorage.setItem('orderId', orderId)\r\n                dispatch(setStripeCheckout(checkoutId))\r\n            })\r\n        \r\n            // dispatch(clearCart())\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport ShowList from '../components/ShowList'\r\nimport { fetchShows } from '../actions/Shows'\r\nimport { addToCart } from '../actions/Cart'\r\n\r\nconst Home = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.fetchShows()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <ShowList shows={props.shows} addToCart={props.addToCart} />\r\n    </>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  shows: PropTypes.array,\r\n  fetchShows: PropTypes.func.isRequired,\r\n  addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      shows: state.shows.data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchShows, addToCart})(Home);","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Segment, Button, Divider, Modal, Message, Header, Image, Card, Grid, Loader } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\n\r\nfunction Account(props) {\r\n\r\n    const [usernameOrEmail, setUsernameOrEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [signupPassword, setSignupPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [showSignIn, setShowSignIn] = useState(true)\r\n\r\n    function handleToggleForms() {\r\n        setShowSignIn(!showSignIn)\r\n    }\r\n\r\n    function handleLoginOnChange(e) {\r\n        const { name, value } = e.target\r\n        if (name === 'usernameOrEmail') {\r\n            setUsernameOrEmail(value)\r\n        } else if (name === 'password') {\r\n            setPassword(value)\r\n        }\r\n    }\r\n\r\n    function handleUserLogin(e) {\r\n        e.preventDefault()\r\n        props.login(usernameOrEmail, password)\r\n    }\r\n\r\n    function handleSignupOnChange(e) {\r\n        const { name, value } = e.target\r\n        if (name === 'username') {\r\n            setUsername(value)\r\n        } else if (name === 'email') {\r\n            setEmail(value)\r\n        } else if (name === 'signupPassword') {\r\n            setSignupPassword(value)\r\n        } else if (name === 'confirmPassword') {\r\n            setConfirmPassword(value)\r\n        }\r\n    }\r\n\r\n    function handleUserSignup(e) {\r\n        e.preventDefault()\r\n        const createUser = {\r\n            username: username,\r\n            email: email,\r\n            password: signupPassword,\r\n            confirmPassword: confirmPassword\r\n        }\r\n        props.userSignupRequest(createUser)\r\n    }\r\n\r\n    return (\r\n        <div className='center'>\r\n            <div className='center-child'>\r\n            {\r\n                props.auth.loading && <Loader active />\r\n            }\r\n            {\r\n                props.auth.error && <Message color='red'>Log in failed, please check your credentials again.</Message>\r\n            }\r\n            <Card>\r\n                <Card.Content>\r\n                    {\r\n                        showSignIn ?\r\n                        <Form>\r\n                            <Form.Input\r\n                                icon='user'\r\n                                iconPosition='left'\r\n                                name='usernameOrEmail'\r\n                                value={usernameOrEmail}\r\n                                label='Username or E-mail'\r\n                                placeholder='Username or E-mail'\r\n                                onChange={handleLoginOnChange}\r\n                                error={typeof props.auth.error !== 'undefined'}\r\n                            />\r\n                            <Form.Input\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                label='Password'\r\n                                type='password'\r\n                                name='password'\r\n                                value={password}\r\n                                placeholder='Password'\r\n                                onChange={handleLoginOnChange}\r\n                                error={typeof props.auth.error !== 'undefined'}\r\n                            />\r\n\r\n                            <Button\r\n                                primary={true}\r\n                                onClick={handleUserLogin}\r\n                                content='Sign in'\r\n                                icon='sign-in'\r\n                                labelPosition='right'\r\n                            />\r\n                        </Form>\r\n                        :\r\n                        <Form>\r\n                            <Form.Input\r\n                                icon='user'\r\n                                iconPosition='left'\r\n                                name='username'\r\n                                value={username}\r\n                                label='Username'\r\n                                placeholder='Username'\r\n                                onChange={handleSignupOnChange}\r\n                            />\r\n\r\n                            <Form.Input\r\n                                icon='mail'\r\n                                iconPosition='left'\r\n                                name='email'\r\n                                value={email}\r\n                                label='E-mail'\r\n                                placeholder='E-mail'\r\n                                onChange={handleSignupOnChange}\r\n                            />\r\n\r\n                            <Form.Input\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                type='password'\r\n                                name='signupPassword'\r\n                                value={signupPassword}\r\n                                label='Password'\r\n                                placeholder='Password'\r\n                                onChange={handleSignupOnChange}\r\n                            />\r\n\r\n                            <Form.Input\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                type='password'\r\n                                name='confirmPassword'\r\n                                value={confirmPassword}\r\n                                label='Confirm password'\r\n                                placeholder='Confirm password'\r\n                                onChange={handleSignupOnChange}\r\n                            />\r\n\r\n                            <Button\r\n                                primary={true}\r\n                                content='Sign up'\r\n                                icon='signup'\r\n                                labelPosition='right'\r\n                                onClick={handleUserSignup}\r\n                            />\r\n\r\n                        </Form>\r\n                    }\r\n                </Card.Content>\r\n            </Card>\r\n\r\n            {\r\n                showSignIn ? \r\n                <a href='#' onClick={()=>handleToggleForms()}>Don't have an account?</a>\r\n                : <a href='#' onClick={()=>handleToggleForms()}>Sign In</a>\r\n            }\r\n            \r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nAccount.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    userSignupRequest: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Account","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Modal, List, Header, Table, Divider, Input, Button, Item } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\n\r\nfunction Order(props) {\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    function handleModalOpen() {\r\n        setModalOpen(true)\r\n    }\r\n\r\n    function handleModalOnClose() {\r\n        setModalOpen(false)\r\n    }\r\n\r\n\r\n    let formattedDate = props.order.date.split('T')[0] + ' ' + props.order.date.split('T')[1].split('.')[0]\r\n\r\n    const modalTrigger =\r\n        <Item key={props.idx} onClick={handleModalOpen}>\r\n            <Item.Content>\r\n                {/* {props.order} */}\r\n                {/* <Item.Header as='a'><span className=\"cart_font\">{element.show.title}</span></Item.Header>\r\n                <Item.Meta>\r\n                    <span className='cart_font cinema'>{prettyShowTime(element.show.show_datetime)}</span>\r\n                </Item.Meta>\r\n                <Item.Description>\r\n                    <span className=\"cart_font\">{element.quantity} tickets X USD {element.show.show_price}</span>\r\n                </Item.Description> */}\r\n            </Item.Content>\r\n        </Item>\r\n        {/* <List.Item onClick={handleModalOpen}>\r\n            <List.Icon name='tag' size='large' verticalAlign='middle' />\r\n            <List.Content>\r\n                <List.Header as='a'>{props.order.id}</List.Header>\r\n                <List.Description as='a'>{formattedDate}</List.Description>\r\n            </List.Content>\r\n        </List.Item> */}\r\n\r\n    const items = _.map(props.order.shows, (showName, idx) => {\r\n        return (\r\n            <Table.Row key={idx}>\r\n                <Table.Cell>{idx+1}</Table.Cell>\r\n                <Table.Cell>{showName}</Table.Cell>\r\n                <Table.Cell>{props.order.quantities[idx]}</Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Modal trigger={modalTrigger} open={modalOpen} onClose={handleModalOnClose} closeIcon>\r\n        <Modal.Header>Order Details</Modal.Header>\r\n\r\n        <Modal.Content>\r\n            <Header as='h3' attached='top'>Product list</Header>\r\n            <Table striped padded attached>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>SN</Table.HeaderCell>\r\n                        <Table.HeaderCell>Product name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Quantity</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {items}\r\n                </Table.Body>\r\n            </Table>\r\n\r\n            <Divider />\r\n\r\n            <Button\r\n                content='Total'\r\n                icon='dollar'\r\n                label={{ basic: true, pointing: 'left', content: props.order.total_price }}\r\n            />\r\n        </Modal.Content>\r\n    </Modal>\r\n    )\r\n}\r\n\r\nOrder.propTypes = {\r\n    order: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Order","import React, {useEffect, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { Item, List, Header } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {prettyShowTime} from '../helpers/Helpers'\r\n\r\nfunction TicketList(props) {\r\n\r\n    const [shows, setShows] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (props.tickets !== undefined && props.tickets.length > 0) {\r\n            setShows(\r\n                getUniqueShows(props.tickets)\r\n            )\r\n        }\r\n    }, [props.tickets])\r\n\r\n    function getUniqueShows(tickets) {\r\n        var showIds = []\r\n        var shows = []\r\n\r\n        for (var i=0; i < tickets.length; i++) {\r\n            const show = tickets[i]['show']\r\n            if (!showIds.includes(show['id'])) {\r\n                showIds.push(show['id'])\r\n                shows.push(show)\r\n            }\r\n        }\r\n\r\n        return shows\r\n    }\r\n\r\n    function getTicketCount(showId) {\r\n        const items = _.filter(props.tickets, (ticket, index) => {\r\n            if (ticket.show.id === showId) {\r\n                return ticket\r\n            }\r\n        })\r\n\r\n        return items.length\r\n    }\r\n\r\n    function getTickets(showId) {\r\n        \r\n        const items = _.map(props.tickets, (ticket, index) => {\r\n            if (ticket.show.id === showId) {\r\n                return (\r\n                    <List.Item key={index}>\r\n                        {/* <List.Icon name='github' size='large' verticalAlign='middle' /> */}\r\n                        <List.Content>\r\n                            <List.Header as={Link} to={`/live/${ticket.uuid}`}>{ticket.uuid}</List.Header>\r\n                            <List.Description as='a'>{ticket.active ? <span>Active</span> : <span>Inactive</span>}</List.Description>\r\n                        </List.Content>\r\n                    </List.Item>\r\n                )\r\n            }\r\n        })\r\n\r\n        return items\r\n    }\r\n\r\n    let items = _.map(shows, (show, index) => {\r\n\r\n        return (\r\n            <Item key={index}>\r\n                <Item.Image size='tiny' src={require(`../assets/images/${show.image_path}`)} />\r\n\r\n                <Item.Content>\r\n                    <Item.Header as='a'><span className=\"cart_font\">{show.title}</span></Item.Header>\r\n                    <Item.Meta>\r\n                        <span className='cart_font cinema'>{prettyShowTime(show.show_datetime)}</span>\r\n                    </Item.Meta>\r\n                    <Item.Description>\r\n                        <Header size=\"tiny\"><span className=\"cart_font\">You have {getTicketCount(show.id)} tickets for this show.</span></Header>\r\n                    </Item.Description>\r\n                    <List divided relaxed>\r\n                        {getTickets(show.id)}\r\n                    </List>\r\n                </Item.Content>\r\n            </Item>\r\n        )\r\n    })\r\n\r\n    const itemList =\r\n        <Item.Group divided>\r\n            {items}\r\n        </Item.Group>\r\n\r\n    return (\r\n        <div>\r\n            {shows.length > 0 ? itemList : <p>No shows for you :(</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTicketList.propTypes = {\r\n    tickets: PropTypes.array\r\n}\r\n\r\nexport default TicketList","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Segment, Button, Divider, Modal, Message, Header, Image, Item } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\n\r\nimport OrderList from './OrderList'\r\nimport TicketList from './TicketList'\r\n\r\nfunction Profile(props) {\r\n\r\n    function handleUserLogout() {\r\n        props.logout()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Message info>\r\n            Logged in as <b>{props.auth.user.username}</b>\r\n            <Header \r\n                size='tiny'\r\n                float='right'\r\n                onClick={handleUserLogout}>\r\n                Logout\r\n            </Header>\r\n        </Message>\r\n\r\n        <Header as='h2' inverted dividing>\r\n            TICKETS\r\n        </Header>\r\n\r\n        <TicketList tickets={props.tickets} />\r\n        \r\n        {/* <Item.Group divided>\r\n            <OrderList orders={props.orders} />\r\n        </Item.Group> */}\r\n\r\n        <Divider />\r\n    </div>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    orders: PropTypes.array,\r\n    tickets: PropTypes.array\r\n}\r\n\r\nexport default Profile","import axios from 'axios'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE } from '../constants/ActionTypes'\r\nimport { fetchShows } from './Shows'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const loginRequest = (username) => {\r\n    return {\r\n        type: LOGIN_REQUEST,\r\n        payload: username\r\n    }\r\n}\r\n\r\nexport const loginSuccess = (user) => {\r\n    return {\r\n        type: LOGIN_SUCCESS,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const loginFailure = (error) => {\r\n    return {\r\n        type: LOGIN_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const setAuthorizationToken = (token) => {\r\n    if (token) {\r\n        axios.defaults.headers.common['Authorization'] = `JWT ${token}`\r\n    } else {\r\n        delete axios.defaults.headers.common['Authorization']\r\n    }\r\n}\r\n\r\nexport const renewAuthorizationToken = (token) => {\r\n    return dispatch => {\r\n        axios.post(`${serverUrl}/accounts/accounts-token-refresh/`, { token })\r\n    }\r\n}\r\n\r\nexport const login = (username, password) => {\r\n\r\n    return dispatch => {\r\n        dispatch(loginRequest(username))\r\n        axios.post(`${serverUrl}/accounts/accounts-token-auth/`, {username, password})\r\n            .then((response) => {\r\n                let token = response.data.token\r\n                localStorage.setItem('jwtToken', token)\r\n                setAuthorizationToken(token)\r\n                dispatch(loginSuccess(jwtDecode(token)))\r\n                console.log('login successful')\r\n            })\r\n            .catch((error) => {\r\n                dispatch(loginFailure(error.response))\r\n                // if (error.response.status === 400 && error.response.data.non_field_errors[0] === 'Unable to log in with provided credentials.') {\r\n                //     console.log(\"Log in failed, please check your credentials again.\")\r\n                // }\r\n            })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem('jwtToken')\r\n        setAuthorizationToken(false)\r\n        dispatch(loginSuccess({}))\r\n    }\r\n}\r\n\r\nexport const checkAuthorizationToken = (token) => {\r\n    return dispatch => {\r\n        axios.post(`${serverUrl}/accounts/accounts-token-verify/`, { token })\r\n            .then((res) => {\r\n                dispatch(renewAuthorizationToken(res.data.token))\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 400 && error.response.data.non_field_errors[0] === 'Signature has expired.') {\r\n                    dispatch(logout())\r\n                    dispatch(fetchShows())\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const userSignupRequest = (userInfo) => {\r\n    return dispatch => {\r\n        axios.post(`${serverUrl}/accounts/users/`, userInfo)\r\n        .then((res) => {\r\n            console.log('Welcome! Your account is available now.')\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 400 && error.response.data.username[0] === 'A user with that username already exists.') {\r\n                console.log('A user with that username already exists.')\r\n            }\r\n        })\r\n    }\r\n}","import axios from 'axios'\r\nimport toastr from 'toastr'\r\n\r\nimport { FETCH_TICKETS_REQUEST, FETCH_TICKETS_SUCCESS, FETCH_TICKETS_FAILURE } from '../constants/ActionTypes'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const fetchTicketsRequest = () => {\r\n    return {\r\n        type: FETCH_TICKETS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchTicketsSuccess = (orders) => {\r\n    return {\r\n        type: FETCH_TICKETS_SUCCESS,\r\n        payload: orders\r\n    }\r\n}\r\n\r\nexport const fetchTicketsFailure = (error) => {\r\n    return {\r\n        type: FETCH_TICKETS_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchTickets = () => {\r\n    return dispatch => {\r\n        dispatch(fetchTicketsRequest())\r\n        axios.get(`${serverUrl}/shows/ticket/`)\r\n            .then((res) => {\r\n                dispatch(fetchTicketsSuccess(res.data))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(fetchTicketsFailure(err))\r\n            })\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport _ from 'lodash'\r\n\r\nimport Account from '../components/Account'\r\nimport Profile from '../components/Profile'\r\nimport { login, logout, userSignupRequest } from '../actions/Auth'\r\nimport { fetchOrders } from '../actions/Account'\r\nimport { fetchTickets } from '../actions/Tickets'\r\n\r\nfunction AccountPage(props) {\r\n\r\n    useEffect(() => {\r\n        if (props.auth.isAuthenticated) {\r\n            props.fetchOrders()\r\n            props.fetchTickets()\r\n        }\r\n    }, [props.auth])\r\n\r\n    return (\r\n        <>\r\n        {\r\n            props.auth.isAuthenticated ? \r\n            <Profile\r\n                auth={props.auth}\r\n                logout={props.logout}\r\n                history={props.history}\r\n                orders={props.orders}\r\n                tickets={props.tickets}\r\n            />\r\n            : <Account\r\n                login={props.login}\r\n                logout={props.logout}\r\n                userSignupRequest={props.userSignupRequest}\r\n                auth={props.auth}\r\n            />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth,\r\n        orders: state.account.data,\r\n        tickets: state.tickets.data\r\n    }\r\n}\r\n\r\nAccountPage.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    userSignupRequest: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    orders: PropTypes.array,\r\n    fetchOrders: PropTypes.func.isRequired,\r\n    tickets: PropTypes.array,\r\n    fetchTickets: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { login, logout, userSignupRequest, fetchOrders, fetchTickets})(AccountPage)","import axios from 'axios'\r\nimport toastr from 'toastr'\r\n\r\nimport { FETCH_ORDERS_REQUEST, FETCH_ORDERS_SUCCESS, FETCH_ORDERS_FAILURE } from '../constants/ActionTypes'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const fetchOrdersRequest = () => {\r\n    return {\r\n        type: FETCH_ORDERS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: FETCH_ORDERS_SUCCESS,\r\n        payload: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFailure = (error) => {\r\n    return {\r\n        type: FETCH_ORDERS_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersRequest())\r\n        axios.get(`${serverUrl}/shows/order/`)\r\n            .then((res) => {\r\n                dispatch(fetchOrdersSuccess(res.data))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(fetchOrdersFailure(err))\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Table, Button, Message, Divider, Item, Label, Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport _ from 'lodash'\r\n\r\nimport {prettyShowTime} from '../helpers/Helpers'\r\n\r\nfunction Cart(props) {\r\n\r\n    let totalPrice = 0\r\n\r\n    const fontStyle = {color:'white'}\r\n\r\n    let items = _.map(props.cart, (element, index) => {\r\n        totalPrice += element.show.show_price * element.quantity\r\n        return (\r\n            <Item key={index}>\r\n                <Item.Image size='tiny' src={require(`../assets/images/${element.show.image_path}`)} />\r\n\r\n                <Item.Content>\r\n                    <Item.Header as='a'><span className=\"cart_font\">{element.show.title}</span></Item.Header>\r\n                    <Item.Meta>\r\n                        <span className='cart_font cinema'>{prettyShowTime(element.show.show_datetime)}</span>\r\n                    </Item.Meta>\r\n                    <Item.Description>\r\n                        <span className=\"cart_font\">{element.quantity} tickets X USD {element.show.show_price}</span>\r\n                    </Item.Description>\r\n                    <Item.Extra>\r\n                        <Button circular icon='trash' onClick={(e) => props.handleRemoveItem(e, element)} />\r\n                        <Button circular icon='plus' onClick={(e) => props.handleAddQuantity(e, element)} />\r\n                        <Button circular icon='minus' onClick={(e) => props.handleRemoveQuantity(e, element)} />\r\n                    </Item.Extra>\r\n                </Item.Content>\r\n            </Item>\r\n        )\r\n    })\r\n\r\n    const itemList =\r\n        <Item.Group divided>\r\n            {items}\r\n        </Item.Group>\r\n\r\n\r\n    const cartEmptyMessage =\r\n        <Message info>\r\n            <Message.Header>\r\n                You haven't selected any events.\r\n            </Message.Header>\r\n            <p>There are no tickets in your cart, go pick some live shows.</p>\r\n        </Message>\r\n\r\n    return (\r\n        <div>\r\n            {items.length > 0 ? itemList : cartEmptyMessage}\r\n        \r\n            <Divider />\r\n\r\n            <Button\r\n                content='Total'\r\n                icon='dollar'\r\n                label={{ basic: true, pointing: 'left', content: totalPrice.toFixed(2) }}\r\n            />\r\n\r\n            <Button primary floated='right' disabled={items.length <= 0} onClick={()=>props.submit()}>\r\n                Buy tickets\r\n            </Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nCart.propTypes = {\r\n    cart: PropTypes.array.isRequired,\r\n    handleRemoveItem: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Cart","import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Step, Icon, Grid, Segment, Button, Header, Loader, Dimmer } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport toastr from 'toastr'\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nimport Cart from '../components/Cart'\r\nimport { removeFromCart, clearCart, placeOrder, addToCart } from '../actions/Cart'\r\nimport { STRIPE_PUBLISHABLE } from '../constants/Stripe'\r\n\r\nconst stripePromise = loadStripe(STRIPE_PUBLISHABLE);\r\n\r\nfunction CartPage(props) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if ('checkoutId' in props.stripe) {\r\n            setLoading(false)\r\n            stripeCheckout(props.stripe.checkoutId)\r\n        }\r\n    }, [props.stripe]);\r\n\r\n    async function stripeCheckout(checkoutId) {\r\n\r\n        const stripe = await stripePromise\r\n\r\n        const result = await stripe.redirectToCheckout({\r\n            sessionId: checkoutId,\r\n          });\r\n\r\n        setLoading(false)\r\n      \r\n        if (result.error) {\r\n            console.log(result.error)\r\n            // If `redirectToCheckout` fails due to a browser or network\r\n            // error, display the localized error message to your customer\r\n            // using `result.error.message`.\r\n        }\r\n    }\r\n\r\n    function handleRemoveItem(e, item) {\r\n        e.stopPropagation()\r\n        props.removeFromCart(item.id)\r\n    }\r\n\r\n    function handleAddQuantity(e, item) {\r\n        e.stopPropagation()\r\n        props.addToCart(item.show, 1)\r\n    }\r\n\r\n    function handleRemoveQuantity(e, item) {\r\n        e.stopPropagation()\r\n        props.addToCart(item.show, -1)\r\n    }\r\n\r\n    function submit() {\r\n        setLoading(true)\r\n        props.placeOrder(props.cart)\r\n        // props.history.push('/')\r\n    }\r\n\r\n    const accountPlaceHolder = \r\n        <div className='center'>\r\n            <a className='center-child' href='#' onClick={() => props.handleTogglePane('account')}>Login to view cart</a>\r\n        </div>\r\n\r\n    return (\r\n        <>\r\n        {\r\n            props.auth.isAuthenticated ? \r\n            <div>\r\n                {\r\n                    loading && <Dimmer active><Loader /></Dimmer>\r\n                }\r\n                <Header as='h2' inverted dividing>\r\n                    CART\r\n                </Header>\r\n                <Cart\r\n                    cart={props.cart}\r\n                    handleRemoveItem={handleRemoveItem}\r\n                    clearCart={props.clearCart}\r\n                    handleAddQuantity={handleAddQuantity}\r\n                    handleRemoveQuantity={handleRemoveQuantity}\r\n                    submit={submit}\r\n                />\r\n            </div>\r\n            : accountPlaceHolder\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nCartPage.propTypes = {\r\n    cart: PropTypes.array.isRequired,\r\n    removeFromCart: PropTypes.func.isRequired,\r\n    clearCart: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    placeOrder: PropTypes.func.isRequired,\r\n    addToCart: PropTypes.func.isRequired,\r\n    handleTogglePane: PropTypes.func.isRequired,\r\n    stripe: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart,\r\n        auth: state.auth,\r\n        stripe: state.stripe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { removeFromCart, clearCart, placeOrder, addToCart })(CartPage)","export const STRIPE_PUBLISHABLE = 'pk_test_51HI1opH9PLlFARsrME2IYTZG7xTcYBrTRJri7xqbVsmiaNU3UdQcpyCPapkW7Tqz2kxFUtO2XgDxpMAGXBbcjDn600OstLfq3B'","import React from 'react'\r\n\r\nimport AccountPage from './AccountPage';\r\nimport CartPage from './CartPage'\r\n\r\nfunction SlidingPanePage(props) {\r\n\r\n    if (props.component === 'account') {\r\n        return <AccountPage />\r\n    } else if (props.component === 'cart') {\r\n        return <CartPage />\r\n    }\r\n\r\n}\r\n\r\nexport default SlidingPanePage","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Step, Icon, Grid, Segment, Button, Header, Loader, Image, Divider } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { addToCart } from '../actions/Cart'\r\nimport {prettyShowTime} from '../helpers/Helpers'\r\n\r\nfunction ShowPane(props) {\r\n\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    function handleAddToCart() {\r\n        props.addToCart(props.show, quantity)\r\n        console.log(`Added <b>${props.show.title}</b> into shopping-cart.`)\r\n    }\r\n\r\n    return (\r\n        <Grid className=\"p-0 m-0\"  style={{width:'100%'}}>\r\n            <Grid.Row>\r\n                <Grid.Column className=\"p-0 m-0\">\r\n                    <Image className=\"m-0 p-0\" fluid src={require(`../assets/images/${props.show.image_path}`)} ui={true} />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column className=\"p-0 m-0\">\r\n                    <Segment.Group>\r\n                        <Segment>\r\n                            <Header as='h2'>{ props.show.title }</Header>\r\n                        </Segment>\r\n                        {\r\n                            props.show.description !== \"No description\" &&\r\n                            <Segment>\r\n                                <Header as='h4'>{ props.show.description }</Header>\r\n                            </Segment>\r\n                        }\r\n                        <Segment>\r\n                            <Header>\r\n                                { \r\n                                        props.show.artists.length > 0 && \r\n                                        <> { props.show.artists.map((value, index) => {\r\n                                                const tag = index === props.show.artists.length-1 ? <span key={index}>{value.name}</span> : <span key={index}>{value.name}, </span>\r\n                                                return tag \r\n                                            })} \r\n                                        </>\r\n                                }\r\n                            </Header>\r\n                        </Segment>\r\n                        <Segment>\r\n                            <Header>\r\n                            {props.show.genre} \r\n                            </Header>\r\n                        </Segment>\r\n                        <Segment>\r\n                            <Header>\r\n                            {prettyShowTime(props.show.show_datetime)}\r\n                            </Header>\r\n                        </Segment>\r\n\r\n                    </Segment.Group>\r\n                    <Divider></Divider>\r\n                    <Header inverted floated='left' as='h4'>USD { props.show.show_price }</Header>\r\n                    <Button floated='right' onClick={handleAddToCart}>\r\n                        <Button.Content visible>\r\n                            <Icon name='shop' />\r\n                        </Button.Content>\r\n                    </Button>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nShowPane.propTypes = {\r\n    show: PropTypes.object.isRequired,\r\n    panel: PropTypes.object.isRequired,\r\n    addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        panel: state.panel\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addToCart})(ShowPane)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Grid, Card, Header, Form, Button } from 'semantic-ui-react'\r\n\r\nimport TicketList from '../components/TicketList'\r\nimport { fetchTickets } from '../actions/Tickets'\r\n\r\nfunction LivePage(props) {\r\n\r\n    // useEffect(() => {\r\n    //     if (props.auth.isAuthenticated) {\r\n    //         props.fetchTickets()\r\n    //     }\r\n    // }, [props.auth])\r\n\r\n    return (\r\n        <div className=\"p-5\">\r\n            <Grid centered columns={2} className=\"p-5\">\r\n                <Grid.Column>\r\n                    <Card className=\"card_background\" style={{width:'100%'}}>\r\n                        {\r\n                            props.auth.isAuthenticated ? \r\n                            <Card.Content>\r\n                                <Header size=\"large\" color=\"red\">Upcoming Shows</Header>\r\n                                <TicketList tickets={props.tickets} />\r\n                            </Card.Content>\r\n                            : <Card.Content>\r\n                                    <Header size=\"large\" color=\"red\">Enter your Ticket</Header>\r\n                                    <Form>\r\n                                        <Form.Field>\r\n                                            {/* <label>Ticket Id</label> */}\r\n                                            <input placeholder='Enter your Ticket Id' />\r\n                                        </Form.Field>\r\n                                        <Button primary type='submit'>Enter</Button>\r\n                                    </Form>\r\n                            </Card.Content>\r\n                        }\r\n                    </Card>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth,\r\n        tickets: state.tickets.data\r\n    }\r\n}\r\n\r\nLivePage.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    tickets: PropTypes.array,\r\n    fetchTickets: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchTickets})(LivePage)","import React from 'react'\r\n\r\nfunction Player() {\r\n    return (\r\n        <div>Watch the show</div>\r\n    )\r\n}\r\n\r\nexport default Player","import React, {useContext, useEffect, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Menu, Input, Icon, Label, Image, Header, Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport _ from 'lodash'\r\n\r\nimport { withRouter, Redirect } from \"react-router\";\r\n\r\nfunction Navbar(props) {\r\n\r\n    const [initialShows, setInitialShows] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (props.shows && (props.shows.length > initialShows.length)) {\r\n            setInitialShows(props.shows)\r\n        }\r\n    }, [props.shows]);\r\n\r\n    function handleSearchItems(e) {\r\n        let filteredShows = _.filter(initialShows, (obj) => {\r\n            return _.includes(obj.title.toLowerCase(), e.target.value.toLowerCase())\r\n        })\r\n\r\n        props.filterShows(filteredShows)\r\n    }\r\n\r\n    // function handleOnScroll(e)\r\n\r\n    return (\r\n        <Menu id='navbar' className='menu_background p-4 m-0' size='massive' secondary>\r\n            \r\n            <Menu.Item as={Link} to='/' header>\r\n                {/* <Image src={require('../../assets/images/crayfish.png')} size='tiny' /> */}\r\n                <Header inverted as='h1'>Odiance</Header>\r\n            </Menu.Item>\r\n            \r\n            {/* <Menu.Item className='search-bar'>\r\n                <Input icon={{ name: 'search', link: true }} placeholder='Search...' onChange={handleSearchItems} />\r\n            </Menu.Item> */}\r\n\r\n            <Menu.Menu position='right'>\r\n                <Menu.Item name='LIVE' color='blue' style={{color:'white'}} as={Link} to='/live'>\r\n                    LIVE\r\n                </Menu.Item>\r\n\r\n                <Menu.Item>\r\n                    <Button onClick={()=>props.handleTogglePane('cart')} icon inverted>\r\n                        <Icon size='large' name='cart' />\r\n                        <Label style={{zIndex:0}}color='red' floating>{props.itemsInCartCount}</Label>\r\n                    </Button>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item>\r\n                    <Button inverted onClick={()=>props.handleTogglePane('account')} icon><Icon size='large' name='user circle' /></Button>\r\n                </Menu.Item>\r\n            </Menu.Menu>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    showSearch: PropTypes.bool.isRequired,\r\n    itemsInCartCount: PropTypes.number.isRequired,\r\n    shows: PropTypes.array,\r\n    filterShows: PropTypes.func.isRequired,\r\n    handleTogglePane: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport { Menu, Input, Icon, Label, Image, Header } from 'semantic-ui-react'\r\n\r\nfunction Footer({className}) {\r\n\r\n    return (\r\n        <Menu className='menu_background p-4 m-0' size='massive' secondary>\r\n            <Menu.Item>        \r\n                <Header as='h4' inverted>Odiance © 2020 Copyright</Header>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Header, Loader, Container, Grid } from 'semantic-ui-react'\r\n\r\nimport { updatePaymentStatus, clearStripe } from '../actions/Stripe'\r\n\r\nfunction Confirm(props) {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const {status, id} = useParams()\r\n    const orderId = localStorage.getItem('orderId')\r\n\r\n    useEffect(() => {\r\n        if (orderId !== null) {\r\n            if (status === 'confirm') {\r\n                props.updatePaymentStatus(orderId, 2)\r\n            } else if (status === 'cancel') {\r\n                props.updatePaymentStatus(orderId, 3)\r\n                setTimeout(() => {\r\n                    props.history.push('/')\r\n                }, 3000)\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if ('status' in props.stripe) {\r\n            if (props.stripe.status === true) {\r\n                setLoading(false)\r\n                props.clearStripe()\r\n                setTimeout(() => {\r\n                    props.history.push('/')\r\n                }, 5000)\r\n            } else if (props.stripe.status === false) {\r\n                props.clearStripe()\r\n                setLoading(false)\r\n                setErrorMessage('Something went wrong on our side. Please contact support to get it resolved. Sorry for the inconvenience.')\r\n            }\r\n        }\r\n    }, [props.stripe])\r\n\r\n    const messageDiv = () => {\r\n        if (errorMessage === '') {\r\n            return <Header size=\"medium\" inverted>Your purchase is complete. We'll email you your live show links. You can also find them in your profile.</Header>\r\n        } else {\r\n            return <Header size=\"medium\" color=\"yellow\">{errorMessage}</Header>\r\n        }\r\n    }\r\n\r\n    const confirmDiv = () => {\r\n        if (loading) {\r\n            return <Header size=\"medium\" inverted>Processing your tickets now</Header>\r\n        } else {\r\n            return messageDiv()\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container className='p-5' textAlign='center'>\r\n            <Grid centered>\r\n            <Grid.Row>\r\n            {\r\n                loading && <Loader active /> \r\n            }\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n            {\r\n                status === 'confirm' ?\r\n                confirmDiv() :\r\n                <Header size=\"medium\" inverted>We're cancelling your order...</Header>\r\n            }\r\n            </Grid.Row>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    stripe: PropTypes.object.isRequired,\r\n    updatePaymentStatus: PropTypes.func.isRequired,\r\n    clearStripe: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stripe: state.stripe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updatePaymentStatus, clearStripe })(Confirm)","import React, { Component, useEffect, useState } from 'react';\nimport { useLocation, Switch, Route, BrowserRouter, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Container } from 'semantic-ui-react'\nimport ReactGA from 'react-ga';\nimport { render } from \"react-dom\";\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport classNames from 'classnames'\n\n\nimport Home from './Home';\nimport SlidingPanePage from './SlidingPanePage';\nimport AccountPage from './AccountPage';\nimport CartPage from './CartPage'\nimport ShowPane from './ShowPane'\nimport LivePage from './LivePage'\nimport Player from './Player'\nimport Header from '../components/Navs/Header';\nimport Footer from '../components/Navs/Footer';\nimport Confirm from '../components/Confirm.js'\nimport { filterShows } from '../actions/Shows'\nimport { checkAuthorizationToken } from '../actions/Auth'\n\n// Initialize Google Analytics\nReactGA.initialize(process.env.REACT_APP_GA_CODE);\n\nfunction trackPage (page) {\n  ReactGA.set({ page });\n  ReactGA.pageview(page);\n};\n\nfunction App(props) {\n\n  const [showSearch, setShowSearch] = useState(true)\n  const [isPaneOpen, setPaneOpen] = useState(false)\n  const [paneComponent, setPaneComponent] = useState('')\n  const [focusShow, setFocusShow] = useState({})\n\n  let location = useLocation();\n\n  function togglePane(componentName) {\n    setPaneComponent(componentName)\n    setPaneOpen(true)\n  }\n\n  function displayComponent() {\n    if (paneComponent === 'account') {\n      return <AccountPage />\n    } else if (paneComponent === 'cart') {\n      return <CartPage \n                handleTogglePane={togglePane}\n              />\n    } else if (paneComponent === 'show') {\n      return <ShowPane\n                show={focusShow}\n              />\n    }\n  }\n\n  useEffect(() => {\n    const page = location.pathname;\n    trackPage(page);\n\n    if (page !== '/') {\n      setShowSearch(false)\n    } else {\n      setShowSearch(true)\n    }\n  }, [location]);\n\n  useEffect(() => {\n    if (localStorage.jwtToken) {\n      props.checkAuthorizationToken(localStorage.jwtToken)\n    }\n  }, [])\n\n  useEffect(() => {\n    if ('id' in props.panel) {\n      togglePane('show')\n      \n      const show = props.shows.filter(obj => {\n        return obj.id === props.panel.id\n      })\n\n      if (show.length !== 0) {\n        setFocusShow(show[0])\n      }\n    }\n  }, [props.panel])\n\n  return (\n    <div>\n      <Header\n        showSearch={showSearch}\n        itemsInCartCount={props.itemsInCartCount}\n        shows={props.shows}\n        filterShows={props.filterShows}\n        handleTogglePane={togglePane} \n      />\n      \n      <Container id='content-wrapper' className='home-background home' fluid>\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/tickets/:status/:id\" component={Confirm} />\n            <Route exact path=\"/live\" component={LivePage} />\n            <Route exact path=\"/live/:ticket\" component={Player} />\n        </Switch>\n      </Container>\n\n      <SlidingPane\n        className=\"pane-background\"\n        overlayClassName=\"some-custom-overlay-class\"\n        isOpen={isPaneOpen}\n        title=\"Hey, it is optional pane title.  I can be React component too.\"\n        subtitle=\"Optional subtitle.\"\n        onRequestClose={() => {setPaneOpen(false)}}\n        width='500px'\n        hideHeader={true}\n        children={displayComponent()}\n      />\n      \n      <Footer />\n\n    </div>\n  )\n}\n\nApp.propTypes = {\n  itemsInCartCount: PropTypes.number.isRequired,\n  shows: PropTypes.array,\n  filterShows: PropTypes.func.isRequired,\n  checkAuthorizationToken: PropTypes.func.isRequired,\n  panel: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      itemsInCartCount: state.cart.length,\n      shows: state.shows.data,\n      panel: state.panel\n  }\n}\n\nexport default connect(mapStateToProps, { filterShows, checkAuthorizationToken })(App);","import { FETCH_SHOWS_REQUEST, FETCH_SHOWS_SUCCESS, FETCH_SHOWS_FAILURE, FILTER_SHOWS } from '../constants/ActionTypes'\r\n\r\nconst shows = (state={}, action={}) => {\r\n    switch(action.type) {\r\n        case FETCH_SHOWS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case FETCH_SHOWS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: action.payload\r\n            }\r\n        case FETCH_SHOWS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n        case FILTER_SHOWS:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default shows","import _ from 'lodash'\r\n\r\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE } from '../constants/ActionTypes'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\n\r\nconst auth = (state=initialState, action={}) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...initialState,\r\n                loading: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                isAuthenticated: !_.isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n        case LOGIN_FAILURE:\r\n            return {\r\n                ...initialState,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default auth","import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from '../constants/ActionTypes'\r\nimport shortid from 'shortid'\r\nimport _ from 'lodash'\r\n\r\nconst cart = (state=[], action={}) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n            if (_.filter(state, (obj) => obj.show.title === action.payload.show.title).length > 0) {\r\n                let newState = state.slice()\r\n                for (let i=0; i<newState.length; i++) {\r\n                    if (newState[i].show.title === action.payload.show.title) {\r\n                        if (action.payload.quantity < 0 && newState[i].quantity === 1) {\r\n                            continue\r\n                        }\r\n                        newState[i].quantity += action.payload.quantity\r\n                    }\r\n                }\r\n\r\n                return newState\r\n            }\r\n\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: shortid.generate(),\r\n                    show: action.payload.show,\r\n                    quantity: action.payload.quantity\r\n                }\r\n            ]\r\n        \r\n        case REMOVE_FROM_CART:\r\n            var idx = _.findIndex(state, { id: action.payload.id })\r\n            if (idx >= 0) {\r\n                return [\r\n                    ...state.slice(0, idx),\r\n                    ...state.slice(idx + 1)\r\n                ]\r\n            }\r\n\r\n            return state\r\n\r\n        case CLEAR_CART:\r\n            return []\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cart","import { FETCH_ORDERS_REQUEST, FETCH_ORDERS_SUCCESS, FETCH_ORDERS_FAILURE } from '../constants/ActionTypes'\r\n\r\nconst account = (state={}, action={}) => {\r\n    switch (action.type) {\r\n        case FETCH_ORDERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n\r\n        case FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: action.payload\r\n            }\r\n\r\n        case FETCH_ORDERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default account","import { SET_STRIPE_CHECKOUT, SET_PAYMENT_STATUS, CLEAR_STRIPE } from '../constants/ActionTypes'\r\n\r\nconst stripe = (state={}, action={}) => {\r\n    switch(action.type) {\r\n        case SET_STRIPE_CHECKOUT:\r\n            return {\r\n                checkoutId: action.payload.checkoutId\r\n            }\r\n        case SET_PAYMENT_STATUS:\r\n            return {\r\n                status: action.payload\r\n            }\r\n        case CLEAR_STRIPE:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default stripe","import { SET_SHOW } from '../constants/ActionTypes'\r\n\r\nconst panel = (state={}, action={}) => {\r\n    switch (action.type) {\r\n        case SET_SHOW:\r\n            return {\r\n                id: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default panel","import { FETCH_TICKETS_REQUEST, FETCH_TICKETS_SUCCESS, FETCH_TICKETS_FAILURE } from '../constants/ActionTypes'\r\n\r\nconst tickets = (state={}, action={}) => {\r\n    switch (action.type) {\r\n        case FETCH_TICKETS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n\r\n        case FETCH_TICKETS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: action.payload\r\n            }\r\n\r\n        case FETCH_TICKETS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default tickets","import { combineReducers } from 'redux'\r\n\r\nimport shows from './Shows'\r\nimport auth from './Auth'\r\nimport cart from './Cart'\r\nimport account from './Account'\r\nimport stripe from './Stripe'\r\nimport panel from './Panel'\r\nimport tickets from './Tickets'\r\n\r\nconst rootReducer = combineReducers({\r\n    shows,\r\n    auth,\r\n    cart,\r\n    account,\r\n    stripe,\r\n    panel,\r\n    tickets\r\n})\r\n\r\nexport default rootReducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport jwtDecode from 'jwt-decode'\n\nimport App from './containers/App'\nimport rootReducer from './reducers/index'\nimport { loginSuccess, setAuthorizationToken } from './actions/Auth'\n\nimport * as serviceWorker from './serviceWorker'\nimport './assets/scss/style.scss'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n      applyMiddleware(thunk)\n  )\n)\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken)\n  store.dispatch(loginSuccess(jwtDecode(localStorage.jwtToken)))\n}\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}