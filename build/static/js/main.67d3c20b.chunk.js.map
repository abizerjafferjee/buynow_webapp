{"version":3,"sources":["actions/Panel.js","constants/ActionTypes.js","components/Show.js","components/ShowList.js","constants/Common.js","actions/Shows.js","actions/Stripe.js","actions/Cart.js","containers/Home.js","components/Account.js","components/TicketList.js","components/Profile.js","actions/Auth.js","containers/AccountPage.js","actions/Account.js","actions/Tickets.js","components/Cart.js","containers/CartPage.js","constants/Stripe.js","containers/ShowPane.js","containers/LivePage.js","components/Player.js","actions/LiveShow.js","containers/PlayerPage.js","components/Navs/Header.js","components/Navs/Footer.js","components/Confirm.js","containers/App.js","reducers/Shows.js","reducers/Auth.js","reducers/Cart.js","reducers/Account.js","reducers/Stripe.js","reducers/Panel.js","reducers/Tickets.js","reducers/SignUp.js","reducers/LiveShow.js","reducers/index.js","serviceWorker.js","index.js","assets/images/odiance-logo.svg"],"names":["setShowDisplay","id","dispatch","type","payload","setShowPanel","connect","state","panel","props","Card","className","onClick","showId","show","artists","name","Image","style","borderRadius","src","poster_img_url","ui","title","interval","format","date","show_datetime","language","genre","ShowList","w","window","outerWidth","useState","itemsPerRow","setItemsPerRow","useEffect","Math","round","showList","_","map","shows","index","key","addToCart","Group","border","serverUrl","fetchShows","fetch","then","response","json","data","catch","error","fetchShowsFailure","stripePaymentStatus","status","clearStripe","localStorage","removeItem","quantity","slug","useParams","undefined","result","find","obj","history","Account","usernameOrEmail","setUsernameOrEmail","password","setPassword","username","setUsername","email","setEmail","signupPassword","setSignupPassword","confirmPassword","setConfirmPassword","showSignIn","setShowSignIn","handleToggleForms","handleLoginOnChange","e","target","value","handleSignupOnChange","Login","auth","loading","Dimmer","active","Loader","Message","color","Form","Input","icon","iconPosition","placeholder","onChange","size","preventDefault","login","SignUp","signup","success","createUser","userSignupRequest","TicketList","setShows","tickets","length","showIds","i","includes","push","getUniqueShows","items","Item","Content","Meta","Description","filter","ticket","List","divided","relaxed","Header","as","Link","to","uuid","getTickets","itemList","Profile","inverted","dividing","Divider","user","logout","loginSuccess","setAuthorizationToken","token","axios","defaults","headers","common","ownProps","orders","account","loginRequest","post","setItem","jwtDecode","console","log","loginFailure","userInfo","res","signupFailure","fetchOrders","get","err","fetchTickets","isAuthenticated","Cart","ticketPrices","cart","element","show_price","Extra","Button","circular","handleRemoveItem","handleAddQuantity","handleRemoveQuantity","cartEmptyMessage","toFixed","calcTaxes","calcFees","calcTotal","primary","floated","disabled","submit","stripePromise","loadStripe","stripe","removeFromCart","clearCart","placeOrder","totalPrice","showsArr","pricesArr","quantitiesArr","forEach","quantities","prices","total_price","orderId","checkoutId","stripe_session","setStripeCheckout","setLoading","a","redirectToCheckout","sessionId","stripeCheckout","accountPlaceHolder","href","handleTogglePane","item","stopPropagation","Container","fluid","description","ticketId","setTicketId","playerConfigs","file","forceHLS","Player","controls","muted","config","url","playing","width","height","liveshow","fromNow","updateLiveShow","patch","fetchLiveShow","liveshowRequest","clearLiveShow","closeShow","event","getItem","addEventListener","removeEventListener","isLoading","DesktopContainer","children","getWidth","Responsive","fireOnMount","minWidth","onlyTablet","Menu","secondary","header","require","position","Icon","Label","zIndex","floating","itemsInCartCount","MobileContainer","maxWidth","onlyMobile","ResponsiveContainer","Fragment","getWidthFactory","isMobileFromSSR","isSSR","ssrValue","innerWidth","Navbar","MobileDetect","navigator","userAgent","mobile","Footer","updatePaymentStatus","payment_status","errorMessage","setErrorMessage","setTimeout","textAlign","Grid","centered","Row","ReactGA","initialize","process","REACT_APP_GA_CODE","filterShows","checkAuthorizationToken","renewAuthorizationToken","non_field_errors","showSearch","setShowSearch","isPaneOpen","setPaneOpen","paneComponent","setPaneComponent","focusShow","setFocusShow","hidePaneCloseButton","setHidePaneCloseButton","paneWidth","setPaneWidth","location","useLocation","togglePane","componentName","page","pathname","set","pageview","trackPage","jwtToken","exact","path","component","Home","Confirm","LivePage","PlayerPage","AccountPage","overlayClassName","isOpen","onRequestClose","hideHeader","action","initialState","isEmpty","newState","slice","shortid","generate","idx","findIndex","rootReducer","combineReducers","Boolean","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.67d3c20b.chunk.js","sourcesContent":["import { SET_SHOW } from '../constants/ActionTypes'\r\n\r\nexport const setShowPanel = (id) => {\r\n    return {\r\n        type: SET_SHOW,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const setShowDisplay = (id) => {\r\n    return dispatch => {\r\n        dispatch(setShowPanel(id))\r\n    }\r\n}","export const FETCH_SHOWS_REQUEST = 'FETCH_SHOWS_REQUEST'\r\nexport const FETCH_SHOWS_SUCCESS = 'FETCH_SHOWS_SUCCESS'\r\nexport const FETCH_SHOWS_FAILURE = 'FETCH_SHOWS_FAILURE'\r\nexport const FILTER_SHOWS = 'FILTER_SHOWS'\r\n\r\nexport const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\r\nexport const CLEAR_CART = 'CLEAR_CART'\r\n\r\nexport const SET_STRIPE_CHECKOUT = 'SET_STRIPE_CHECKOUT'\r\nexport const CLEAR_STRIPE = 'CLEAR_STRIPE'\r\nexport const SET_PAYMENT_STATUS = 'SET_PAYMENT_STATUS'\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\n\r\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE'\r\n\r\nexport const SET_BILLING_OPTIONS = 'SET_BILLING_OPTIONS'\r\nexport const CLEAR_BILLING_OPTIONS = 'CLEAR_BILLING_OPTIONS'\r\n\r\nexport const FETCH_ORDERS_REQUEST = 'FETCH_ORDERS_REQUEST'\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\r\nexport const FETCH_ORDERS_FAILURE = 'FETCH_ORDERS_FAILURE'\r\n\r\nexport const FETCH_TICKETS_REQUEST = 'FETCH_TICKETS_REQUEST'\r\nexport const FETCH_TICKETS_SUCCESS = 'FETCH_TICKETS_SUCCESS'\r\nexport const FETCH_TICKETS_FAILURE = 'FETCH_TICKETS_FAILURE'\r\n\r\nexport const LIVESHOW_REQUEST = 'LIVESHOW_REQUEST'\r\nexport const LIVESHOW_SUCCESS = 'LIVESHOW_SUCCESS'\r\nexport const LIVESHOW_FAILURE = 'LIVESHOW_FAILURE'\r\nexport const LIVESHOW_CLEAR = 'LIVESHOW_CLEAR'\r\n\r\nexport const SET_SHOW = 'SET_SHOW'","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card, Image } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment'\r\n\r\nimport {setShowDisplay} from '../actions/Panel' \r\n\r\nfunction Show(props) {\r\n\r\n    function handleShowPane(showId) {\r\n        props.setShowDisplay(showId)\r\n    }\r\n\r\n    const imgStyle = {\r\n        borderRadius: '5%'\r\n    }\r\n\r\n    return (\r\n            <Card className=\"card_background\" onClick={() => handleShowPane(props.show.id)}>\r\n        \r\n                <div className=\"h3 p-1\">{props.show.artists[0].name}</div>\r\n                <Image className='card_image' style={imgStyle} src={props.show.poster_img_url} ui={false} />\r\n\r\n                <div>\r\n                    <div className=\"h3 p-1\">{props.show.title}</div>\r\n                    <div className=\"h4 px-1 my-0\"> \r\n                        <Moment \r\n                            interval={0} \r\n                            format=\"MMM Do - LT\"\r\n                            date={props.show.show_datetime}     \r\n                        />\r\n                    </div>\r\n                    <div className=\"h5 p-1\">{props.show.language} - {props.show.genre}</div>\r\n                </div>\r\n            </Card>\r\n    )\r\n}\r\n\r\nShow.propTypes = {\r\n    show: PropTypes.object.isRequired,\r\n    addToCart: PropTypes.func.isRequired,\r\n    panel: PropTypes.object.isRequired,\r\n    setShowDisplay: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        panel: state.panel\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setShowDisplay})(Show)","import React, {useEffect, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { Card } from 'semantic-ui-react'\r\n\r\nimport Show from './Show'\r\n\r\nfunction ShowList(props) {\r\n\r\n    const w = window.outerWidth\r\n    const cardWidth = 320\r\n    const [itemsPerRow, setItemsPerRow] = useState(1)\r\n\r\n    useEffect(() => {\r\n        setItemsPerRow(Math.round(w/cardWidth))\r\n    }, [])\r\n\r\n    let showList = _.map(props.shows, (show, index) => {\r\n        return (\r\n            <Show \r\n                key={index}\r\n                show={show}\r\n                addToCart={props.addToCart}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Card.Group \r\n            className=\"py-5\" \r\n            itemsPerRow={itemsPerRow} \r\n            style={{border:'none'}}\r\n        >\r\n            {showList}\r\n        </Card.Group>\r\n    )\r\n}\r\n\r\nShowList.propTypes = {\r\n    shows: PropTypes.array,\r\n    addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ShowList","export const TOASTR_OPTIONS = {\r\n    closeButton: true,\r\n    preventDuplicated: true,\r\n    positionClass: 'toast-bottom-left'\r\n}\r\n\r\nexport const serverUrl = 'http://localhost:8000'","import { FETCH_SHOWS_REQUEST, FETCH_SHOWS_SUCCESS, FETCH_SHOWS_FAILURE, FILTER_SHOWS } from '../constants/ActionTypes'\r\n\r\n// const serverUrl = 'http://localhost:8000'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const fetchShowsRequest = () => {\r\n    return {\r\n        type: FETCH_SHOWS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchShowsSuccess = (shows) => {\r\n    return {\r\n        type: FETCH_SHOWS_SUCCESS,\r\n        payload: shows\r\n    }\r\n}\r\n\r\nexport const fetchShowsFailure = (error) => {\r\n    return {\r\n        type: FETCH_SHOWS_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchShows = () => {\r\n    return dispatch => {\r\n        dispatch(fetchShowsRequest())\r\n        fetch(`${serverUrl}/api/shows/`)\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then((data) => {\r\n                dispatch(fetchShowsSuccess(data))\r\n            })\r\n            .catch((error) => {\r\n                dispatch(fetchShowsFailure(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const filterShows = (shows) => {\r\n    return {\r\n        type: FILTER_SHOWS,\r\n        payload: shows\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nimport { SET_STRIPE_CHECKOUT, SET_PAYMENT_STATUS, CLEAR_STRIPE } from '../constants/ActionTypes'\r\nimport { clearCart } from './Cart'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const setStripeCheckout = (checkoutId) => {\r\n    return {\r\n        type: SET_STRIPE_CHECKOUT,\r\n        payload: {\r\n            checkoutId: checkoutId\r\n        }\r\n    }\r\n}\r\n\r\nexport const stripePaymentStatus = (status) => {\r\n    return {\r\n        type: SET_PAYMENT_STATUS,\r\n        payload: status\r\n    }\r\n}\r\n\r\nexport const clearStripe = () => {\r\n    localStorage.removeItem('orderId')\r\n    return {\r\n        type: CLEAR_STRIPE\r\n    }\r\n}\r\n\r\nexport const updatePaymentStatus = (orderId, payment_status) => {\r\n    return dispatch => {\r\n        axios.patch(`${serverUrl}/api/orders/${orderId}/`, {payment_status: payment_status})\r\n            .then((res) => {\r\n                if (payment_status === 2) {\r\n                    dispatch(stripePaymentStatus(true))\r\n                } else if (payment_status === 3) {\r\n                    dispatch(clearStripe())\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (payment_status === 2) {\r\n                    dispatch(stripePaymentStatus(false))\r\n                } else {\r\n                    console.log('something went wrong...update the status of order to cancelled')\r\n                }\r\n            })\r\n    }\r\n}","import axios from 'axios'\r\nimport _ from 'lodash'\r\n// import toastr from 'toastr'\r\n\r\nimport { setStripeCheckout } from './Stripe'\r\nimport { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from '../constants/ActionTypes'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const addToCart = (show, quantity) => {\r\n    return {\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            show: show,\r\n            quantity: quantity\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return {\r\n        type: REMOVE_FROM_CART,\r\n        payload: {\r\n            id: id\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: CLEAR_CART\r\n    }\r\n}\r\n\r\nexport const placeOrder = (items) => {\r\n    return dispatch => {\r\n        let totalPrice = 0\r\n        let showsArr = []\r\n        let pricesArr = []\r\n        let quantitiesArr = []\r\n\r\n        _.forEach(items, (element) => {\r\n            totalPrice += element.show.show_price * element.quantity\r\n            showsArr.push(element.show.title)\r\n            pricesArr.push(element.show.show_price)\r\n            quantitiesArr.push(element.quantity)\r\n        })\r\n\r\n        axios.post(`${serverUrl}/api/orders/`, {shows: showsArr, quantities: quantitiesArr, prices: pricesArr, total_price: totalPrice.toFixed(2)})\r\n            .then((res) => {\r\n                const orderId = res.data.id\r\n                const checkoutId = res.data.stripe_session.id\r\n                localStorage.setItem('orderId', orderId)\r\n                dispatch(setStripeCheckout(checkoutId))\r\n            })\r\n        \r\n            // dispatch(clearCart())\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { useParams, useLocation } from 'react-router-dom'\r\nimport _ from 'lodash'\r\n\r\nimport ShowList from '../components/ShowList'\r\nimport { fetchShows } from '../actions/Shows'\r\nimport { addToCart } from '../actions/Cart'\r\nimport { setShowDisplay } from '../actions/Panel' \r\n\r\nconst Home = (props) => {\r\n\r\n  const {slug} = useParams()\r\n\r\n  useEffect(() => {\r\n    props.fetchShows()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (slug !== undefined){\r\n      var showId = _.result(_.find(props.shows, (obj) => {\r\n                    return obj.slug === slug \r\n                  }), 'id')\r\n\r\n      if (showId !== undefined) {\r\n        props.setShowDisplay(showId)\r\n      }\r\n    }\r\n  }, [props.shows])\r\n\r\n  return (\r\n    <>\r\n      <ShowList shows={props.shows} addToCart={props.addToCart} history={props.history} />\r\n    </>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  shows: PropTypes.array,\r\n  fetchShows: PropTypes.func.isRequired,\r\n  addToCart: PropTypes.func.isRequired,\r\n  setShowDisplay: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      shows: state.shows.data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchShows, addToCart, setShowDisplay })(Home);","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Message, Loader, Dimmer } from 'semantic-ui-react'\r\n// import _ from 'lodash'\r\n\r\nfunction Account(props) {\r\n\r\n    const [usernameOrEmail, setUsernameOrEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [signupPassword, setSignupPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [showSignIn, setShowSignIn] = useState(true)\r\n\r\n    function handleToggleForms() {\r\n        setShowSignIn(!showSignIn)\r\n    }\r\n\r\n    function handleLoginOnChange(e) {\r\n        const { name, value } = e.target\r\n        if (name === 'usernameOrEmail') {\r\n            setUsernameOrEmail(value)\r\n        } else if (name === 'password') {\r\n            setPassword(value)\r\n        }\r\n    }\r\n\r\n    function handleUserLogin(e) {\r\n        e.preventDefault()\r\n        props.login(usernameOrEmail, password)\r\n    }\r\n\r\n    function handleSignupOnChange(e) {\r\n        const { name, value } = e.target\r\n        if (name === 'username') {\r\n            setUsername(value)\r\n        } else if (name === 'email') {\r\n            setEmail(value)\r\n        } else if (name === 'signupPassword') {\r\n            setSignupPassword(value)\r\n        } else if (name === 'confirmPassword') {\r\n            setConfirmPassword(value)\r\n        }\r\n    }\r\n\r\n    function handleUserSignup(e) {\r\n        e.preventDefault()\r\n        const createUser = {\r\n            username: username,\r\n            email: email,\r\n            password: signupPassword,\r\n            confirmPassword: confirmPassword\r\n        }\r\n        props.userSignupRequest(createUser)\r\n    }\r\n\r\n    const Login = \r\n        <div>\r\n            {\r\n                props.auth.loading && <Dimmer active><Loader /></Dimmer>\r\n            }\r\n            <div className='center-child'>\r\n                {\r\n                    props.auth.error && <Message color='red'>Log in failed, please check your credentials again.</Message>\r\n                }\r\n                <Form>\r\n                    <label className='text-white h5'>Username or E-mail</label>\r\n                    <Form.Input\r\n                        icon='user'\r\n                        iconPosition='left'\r\n                        name='usernameOrEmail'\r\n                        value={usernameOrEmail}\r\n                        placeholder='Username or E-mail'\r\n                        onChange={handleLoginOnChange}\r\n                        error={typeof props.auth.error !== 'undefined'}\r\n                        size=\"big\"\r\n                    />\r\n                    <label className='text-white h5'>Password</label>\r\n                    <Form.Input\r\n                        icon='lock'\r\n                        iconPosition='left'\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        placeholder='Password'\r\n                        onChange={handleLoginOnChange}\r\n                        error={typeof props.auth.error !== 'undefined'}\r\n                        size=\"big\"\r\n                    />\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={handleUserLogin}>Sign In</button>\r\n                </Form>\r\n                <a className=\"d-block text-center text-white h5 m-4\" onClick={()=>handleToggleForms()}>\r\n                    <u>Don't have an account?</u>\r\n                </a>\r\n            \r\n            </div>\r\n        </div>\r\n\r\n    const SignUp = \r\n        <div>\r\n            {\r\n                props.signup.loading && <Dimmer active><Loader /></Dimmer>\r\n            }\r\n            <div className='center-child'>\r\n                {\r\n                    props.signup.error && <Message color='red'>A user with that username already exists.</Message>\r\n                }\r\n                {\r\n                    props.signup.success && <Message color='green'>Your account is now available. Sign in to continue.</Message>\r\n                }\r\n                <Form>\r\n                    <label className='text-white h5'>Username</label>\r\n                    <Form.Input\r\n                        icon='user'\r\n                        iconPosition='left'\r\n                        name='username'\r\n                        value={username}\r\n                        placeholder='Username'\r\n                        onChange={handleSignupOnChange}\r\n                        size=\"big\"\r\n                    />\r\n                    <label className='text-white h5'>Email</label>\r\n                    <Form.Input\r\n                        icon='mail'\r\n                        iconPosition='left'\r\n                        name='email'\r\n                        value={email}\r\n                        placeholder='E-mail'\r\n                        onChange={handleSignupOnChange}\r\n                        size=\"big\"\r\n                    />\r\n                    <label className='text-white h5'>Password</label>\r\n                    <Form.Input\r\n                        icon='lock'\r\n                        iconPosition='left'\r\n                        type='password'\r\n                        name='signupPassword'\r\n                        value={signupPassword}\r\n                        placeholder='Password'\r\n                        onChange={handleSignupOnChange}\r\n                        size=\"big\"\r\n                    />\r\n                    <label className='text-white h5'>Confirm Password</label>\r\n                    <Form.Input\r\n                        icon='lock'\r\n                        iconPosition='left'\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        placeholder='Confirm Password'\r\n                        onChange={handleSignupOnChange}\r\n                        size=\"big\"\r\n                    />\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={handleUserSignup}>Sign Up</button>\r\n\r\n                </Form>\r\n                <a className=\"d-block text-center text-white h5 m-4\" onClick={()=>handleToggleForms()}>\r\n                    <u>Already have an account?</u>\r\n                </a>\r\n            \r\n            </div>\r\n        </div>\r\n\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            showSignIn ? <>{Login}</> : <>{SignUp}</>\r\n        }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nAccount.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    userSignupRequest: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    signup: PropTypes.object\r\n}\r\n\r\nexport default Account","import React, {useEffect, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { Item, List, Header } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\n\r\nfunction TicketList(props) {\r\n\r\n    const [shows, setShows] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (props.tickets !== undefined && props.tickets.length > 0) {\r\n            setShows(\r\n                getUniqueShows(props.tickets)\r\n            )\r\n        }\r\n    }, [props.tickets])\r\n\r\n    function getUniqueShows(tickets) {\r\n        var showIds = []\r\n        var shows = []\r\n\r\n        for (var i=0; i < tickets.length; i++) {\r\n            const show = tickets[i]['show']\r\n            if (!showIds.includes(show['id'])) {\r\n                showIds.push(show['id'])\r\n                shows.push(show)\r\n            }\r\n        }\r\n        return shows\r\n    }\r\n\r\n    function getTicketCount(showId) {\r\n        const items = _.filter(props.tickets, (ticket, index) => {\r\n            if (ticket.show.id === showId) {\r\n                return ticket\r\n            }\r\n        })\r\n        return items.length\r\n    }\r\n\r\n    function getTickets(showId) {\r\n        \r\n        const items = _.map(props.tickets, (ticket, index) => {\r\n            if (ticket.show.id === showId) {\r\n                return (\r\n                    <List.Item key={index}>\r\n                        <List.Content>\r\n                            <List.Header as={Link} to={`/live/${ticket.uuid}`}>{ticket.uuid}</List.Header>\r\n                            <List.Description>\r\n                                <div className=\"h6\">{ticket.active ? <span className=\"text-success\">Active</span> : <span className=\"text-secondary\">Inactive</span>}</div>\r\n                            </List.Description>\r\n                        </List.Content>\r\n                    </List.Item>\r\n                )\r\n            }\r\n        })\r\n\r\n        return items\r\n    }\r\n\r\n    let items = _.map(shows, (show, index) => {\r\n\r\n        return (\r\n            <Item key={index}>\r\n                <Item.Image size='small' src={show.poster_img_url} />\r\n\r\n                <Item.Content>\r\n                    <div className=\"h3 text-white\">{ show.artists[0].name}</div>\r\n                    <div className=\"h5 text-white\"><b>{ show.title }</b></div>\r\n                    <Item.Meta>\r\n                        <div className=\"h5 text-white\"> \r\n                            <Moment \r\n                                interval={0} \r\n                                format=\"MMM Do - LT\"\r\n                                date={show.show_datetime}     \r\n                            />\r\n                        </div>\r\n                    </Item.Meta>\r\n                    <Item.Description>\r\n                        <div className=\"text-white h5\">You have {getTicketCount(show.id)} tickets for this show.</div>\r\n                    </Item.Description>\r\n                    <List divided relaxed>\r\n                        {getTickets(show.id)}\r\n                    </List>\r\n                </Item.Content>\r\n            </Item>\r\n        )\r\n    })\r\n\r\n    const itemList = <Item.Group divided>{items}</Item.Group>\r\n\r\n    return (\r\n        <div>\r\n            {shows.length > 0 ? itemList : <p>No shows for you :(</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTicketList.propTypes = {\r\n    tickets: PropTypes.array\r\n}\r\n\r\nexport default TicketList","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Divider, Message, Header } from 'semantic-ui-react'\r\n// import _ from 'lodash'\r\n\r\nimport TicketList from './TicketList'\r\n\r\nfunction Profile(props) {\r\n\r\n    function handleUserLogout() {\r\n        props.logout()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header as='h2' inverted dividing>\r\n                TICKETS\r\n            </Header>\r\n\r\n            <TicketList tickets={props.tickets} />\r\n\r\n            <Divider />\r\n            <div className=\"d-block text-white h6\">\r\n                Logged in as <b>{props.auth.user.username}</b>\r\n                <div className=\"float-right\"\r\n                    onClick={handleUserLogout}>\r\n                    Logout\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    orders: PropTypes.array,\r\n    tickets: PropTypes.array\r\n}\r\n\r\nexport default Profile","import axios from 'axios'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAILURE } from '../constants/ActionTypes'\r\nimport { fetchShows } from './Shows'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const loginRequest = (username) => {\r\n    return {\r\n        type: LOGIN_REQUEST,\r\n        payload: username\r\n    }\r\n}\r\n\r\nexport const loginSuccess = (user) => {\r\n    return {\r\n        type: LOGIN_SUCCESS,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const loginFailure = (error) => {\r\n    return {\r\n        type: LOGIN_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const setAuthorizationToken = (token) => {\r\n    if (token) {\r\n        axios.defaults.headers.common['Authorization'] = `JWT ${token}`\r\n    } else {\r\n        delete axios.defaults.headers.common['Authorization']\r\n    }\r\n}\r\n\r\nexport const renewAuthorizationToken = (token) => {\r\n    return dispatch => {\r\n        axios.post(`${serverUrl}/accounts/accounts-token-refresh/`, { token })\r\n    }\r\n}\r\n\r\nexport const login = (username, password) => {\r\n\r\n    return dispatch => {\r\n        dispatch(loginRequest(username))\r\n        axios.post(`${serverUrl}/accounts/accounts-token-auth/`, {username, password})\r\n            .then((response) => {\r\n                let token = response.data.token\r\n                localStorage.setItem('jwtToken', token)\r\n                setAuthorizationToken(token)\r\n                dispatch(loginSuccess(jwtDecode(token)))\r\n                console.log('login successful')\r\n            })\r\n            .catch((error) => {\r\n                dispatch(loginFailure(error.response))\r\n                // if (error.response.status === 400 && error.response.data.non_field_errors[0] === 'Unable to log in with provided credentials.') {\r\n                //     console.log(\"Log in failed, please check your credentials again.\")\r\n                // }\r\n            })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem('jwtToken')\r\n        setAuthorizationToken(false)\r\n        dispatch(loginSuccess({}))\r\n    }\r\n}\r\n\r\nexport const checkAuthorizationToken = (token) => {\r\n    return dispatch => {\r\n        axios.post(`${serverUrl}/accounts/accounts-token-verify/`, { token })\r\n            .then((res) => {\r\n                dispatch(renewAuthorizationToken(res.data.token))\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 400 && error.response.data.non_field_errors[0] === 'Signature has expired.') {\r\n                    dispatch(logout())\r\n                    dispatch(fetchShows())\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const signUpRequest = () => {\r\n    return {\r\n        type: SIGNUP_REQUEST\r\n    }\r\n}\r\n\r\nexport const signupSuccess = () => {\r\n    return {\r\n        type: SIGNUP_SUCCESS\r\n    }\r\n}\r\n\r\nexport const signupFailure = (error) => {\r\n    return {\r\n        type: SIGNUP_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const userSignupRequest = (userInfo) => {\r\n    return dispatch => {\r\n        dispatch(signUpRequest())\r\n        axios.post(`${serverUrl}/accounts/users/`, userInfo)\r\n        .then((res) => {\r\n            console.log('Welcome! Your account is available now.')\r\n            dispatch(signupSuccess())\r\n        })\r\n        .catch((error) => {\r\n            dispatch(signupFailure(error.response))\r\n            if (error.response.status === 400 && error.response.data.username[0] === 'A user with that username already exists.') {\r\n                console.log('A user with that username already exists.')\r\n            }\r\n        })\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport _ from 'lodash'\r\n\r\nimport Account from '../components/Account'\r\nimport Profile from '../components/Profile'\r\nimport { login, logout, userSignupRequest } from '../actions/Auth'\r\nimport { fetchOrders } from '../actions/Account'\r\nimport { fetchTickets } from '../actions/Tickets'\r\n\r\nfunction AccountPage(props) {\r\n\r\n    useEffect(() => {\r\n        if (props.auth.isAuthenticated) {\r\n            props.fetchOrders()\r\n            props.fetchTickets()\r\n        }\r\n    }, [props.auth])\r\n\r\n    return (\r\n        <div className=\"p-2\">\r\n        {\r\n            props.auth.isAuthenticated ? \r\n            <Profile\r\n                auth={props.auth}\r\n                logout={props.logout}\r\n                history={props.history}\r\n                orders={props.orders}\r\n                tickets={props.tickets}\r\n            />\r\n            : <Account\r\n                login={props.login}\r\n                logout={props.logout}\r\n                userSignupRequest={props.userSignupRequest}\r\n                auth={props.auth}\r\n                signup={props.signup}\r\n            />\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth,\r\n        signup: state.signup,\r\n        orders: state.account.data,\r\n        tickets: state.tickets.data\r\n    }\r\n}\r\n\r\nAccountPage.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    userSignupRequest: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    signup: PropTypes.object,\r\n    orders: PropTypes.array,\r\n    fetchOrders: PropTypes.func.isRequired,\r\n    tickets: PropTypes.array,\r\n    fetchTickets: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { login, logout, userSignupRequest, fetchOrders, fetchTickets})(AccountPage)","import axios from 'axios'\r\n// import toastr from 'toastr'\r\n\r\nimport { FETCH_ORDERS_REQUEST, FETCH_ORDERS_SUCCESS, FETCH_ORDERS_FAILURE } from '../constants/ActionTypes'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const fetchOrdersRequest = () => {\r\n    return {\r\n        type: FETCH_ORDERS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: FETCH_ORDERS_SUCCESS,\r\n        payload: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFailure = (error) => {\r\n    return {\r\n        type: FETCH_ORDERS_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersRequest())\r\n        axios.get(`${serverUrl}/api/orders/`)\r\n            .then((res) => {\r\n                dispatch(fetchOrdersSuccess(res.data))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(fetchOrdersFailure(err))\r\n            })\r\n    }\r\n}","import axios from 'axios'\r\n// import toastr from 'toastr'\r\n\r\nimport { FETCH_TICKETS_REQUEST, FETCH_TICKETS_SUCCESS, FETCH_TICKETS_FAILURE } from '../constants/ActionTypes'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const fetchTicketsRequest = () => {\r\n    return {\r\n        type: FETCH_TICKETS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchTicketsSuccess = (orders) => {\r\n    return {\r\n        type: FETCH_TICKETS_SUCCESS,\r\n        payload: orders\r\n    }\r\n}\r\n\r\nexport const fetchTicketsFailure = (error) => {\r\n    return {\r\n        type: FETCH_TICKETS_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchTickets = () => {\r\n    return dispatch => {\r\n        dispatch(fetchTicketsRequest())\r\n        axios.get(`${serverUrl}/api/tickets/`)\r\n            .then((res) => {\r\n                dispatch(fetchTicketsSuccess(res.data))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(fetchTicketsFailure(err))\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Divider, Item } from 'semantic-ui-react'\r\n// import { Link } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport Moment from 'react-moment'\r\n\r\n\r\nfunction Cart(props) {\r\n\r\n    let ticketPrices = 0\r\n\r\n    function calcTaxes(ticketPrices) {\r\n        return 0.13 * ticketPrices\r\n    }\r\n\r\n    function calcFees(ticketPrices) {\r\n        return (ticketPrices + (0.13 * ticketPrices)) * 0.0199 + 0.30\r\n    }\r\n\r\n    function calcTotal(ticketPrices) {\r\n        const taxes = 0.13 * ticketPrices\r\n        const fees = (ticketPrices + (0.13 * ticketPrices)) * 0.0199 + 0.30\r\n        return ticketPrices + taxes + fees\r\n    }\r\n\r\n    let items = _.map(props.cart, (element, index) => {\r\n        ticketPrices += element.show.show_price * element.quantity\r\n        return (\r\n            <Item key={index}>\r\n                <Item.Image size='small' src={element.show.poster_img_url} />\r\n\r\n                <Item.Content>\r\n                    <div className=\"h3 text-white\">{ element.show.artists[0].name}</div>\r\n                    <div className=\"h5 text-white\"><b>{ element.show.title }</b></div>\r\n\r\n                    <Item.Meta>\r\n                        <div className=\"h5 text-white\"> \r\n                            <Moment \r\n                                interval={0} \r\n                                format=\"MMM Do - LT\"\r\n                                date={element.show.show_datetime}     \r\n                            />\r\n                        </div>\r\n                    </Item.Meta>\r\n                    <Item.Description>\r\n                        <div className=\"h6 text-white\">{element.quantity} tickets X USD {element.show.show_price}</div>\r\n                    </Item.Description>\r\n                    <Item.Extra>\r\n                        <Button circular icon='trash' onClick={(e) => props.handleRemoveItem(e, element)} />\r\n                        <Button circular icon='plus' onClick={(e) => props.handleAddQuantity(e, element)} />\r\n                        <Button circular icon='minus' onClick={(e) => props.handleRemoveQuantity(e, element)} />\r\n                    </Item.Extra>\r\n                </Item.Content>\r\n            </Item>\r\n        )\r\n    })\r\n\r\n    const itemList =\r\n        <Item.Group divided>\r\n            {items}\r\n        </Item.Group>\r\n\r\n\r\n    const cartEmptyMessage =\r\n        <div className=\"text-white d-block\">\r\n            <div className=\"\">\r\n                <p className=\"h5\">You haven't selected any events.</p>\r\n                <p className=\"h6\">There are no tickets in your cart, go pick some live shows.</p>\r\n            </div>\r\n        </div>\r\n\r\n    return (\r\n        <div>\r\n            {items.length > 0 ? itemList : cartEmptyMessage}\r\n        \r\n            <Divider />\r\n\r\n            { \r\n                items.length > 0 &&\r\n                <div className=\"d-inline-block text-white\">\r\n                    <div className=\"d-block h6\"><b>Tickets:</b>&nbsp;&nbsp;USD {ticketPrices.toFixed(2)}</div>\r\n                    <div className=\"d-block h6\"><b>Taxes (13%):</b>&nbsp;&nbsp;USD {calcTaxes(ticketPrices).toFixed(2)}</div>\r\n                    <div className=\"d-block h6\"><b>Processing Fees (2.99% + $0.3):</b>&nbsp;&nbsp;USD {calcFees(ticketPrices).toFixed(2)}</div>\r\n                    <div className=\"d-block h3\"><b>Total:&nbsp;&nbsp;USD {calcTotal(ticketPrices).toFixed(2)}</b></div>\r\n                </div>\r\n            }\r\n\r\n            <Button primary floated='right' disabled={items.length <= 0} onClick={()=>props.submit()}>\r\n                Buy tickets\r\n            </Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nCart.propTypes = {\r\n    cart: PropTypes.array.isRequired,\r\n    handleRemoveItem: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Cart","import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Header, Loader, Dimmer } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\n// import { withRouter, Link } from 'react-router-dom'\r\n// import toastr from 'toastr'\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nimport Cart from '../components/Cart'\r\nimport { removeFromCart, clearCart, placeOrder, addToCart } from '../actions/Cart'\r\nimport { STRIPE_PUBLISHABLE } from '../constants/Stripe'\r\n\r\nconst stripePromise = loadStripe(STRIPE_PUBLISHABLE);\r\n\r\nfunction CartPage(props) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if ('checkoutId' in props.stripe) {\r\n            setLoading(false)\r\n            stripeCheckout(props.stripe.checkoutId)\r\n        }\r\n    }, [props.stripe]);\r\n\r\n    async function stripeCheckout(checkoutId) {\r\n\r\n        const stripe = await stripePromise\r\n\r\n        const result = await stripe.redirectToCheckout({\r\n            sessionId: checkoutId,\r\n          });\r\n\r\n        setLoading(false)\r\n      \r\n        if (result.error) {\r\n            console.log(result.error)\r\n            // If `redirectToCheckout` fails due to a browser or network\r\n            // error, display the localized error message to your customer\r\n            // using `result.error.message`.\r\n        }\r\n    }\r\n\r\n    function handleRemoveItem(e, item) {\r\n        e.stopPropagation()\r\n        props.removeFromCart(item.id)\r\n    }\r\n\r\n    function handleAddQuantity(e, item) {\r\n        e.stopPropagation()\r\n        props.addToCart(item.show, 1)\r\n    }\r\n\r\n    function handleRemoveQuantity(e, item) {\r\n        e.stopPropagation()\r\n        props.addToCart(item.show, -1)\r\n    }\r\n\r\n    function submit() {\r\n        setLoading(true)\r\n        props.placeOrder(props.cart)\r\n        // props.history.push('/')\r\n    }\r\n\r\n    const accountPlaceHolder = \r\n        <div className='center'>\r\n            <a className='center-child' href='#' onClick={() => props.handleTogglePane('account')}>Login to view cart</a>\r\n        </div>\r\n\r\n    return (\r\n        <div className=\"p-2\">\r\n        {\r\n            props.auth.isAuthenticated ? \r\n            <div>\r\n                {\r\n                    loading && <Dimmer active><Loader /></Dimmer>\r\n                }\r\n                <Header as='h2' inverted dividing>\r\n                    CART\r\n                </Header>\r\n                <Cart\r\n                    cart={props.cart}\r\n                    handleRemoveItem={handleRemoveItem}\r\n                    clearCart={props.clearCart}\r\n                    handleAddQuantity={handleAddQuantity}\r\n                    handleRemoveQuantity={handleRemoveQuantity}\r\n                    submit={submit}\r\n                />\r\n            </div>\r\n            : accountPlaceHolder\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nCartPage.propTypes = {\r\n    cart: PropTypes.array.isRequired,\r\n    removeFromCart: PropTypes.func.isRequired,\r\n    clearCart: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    placeOrder: PropTypes.func.isRequired,\r\n    addToCart: PropTypes.func.isRequired,\r\n    handleTogglePane: PropTypes.func.isRequired,\r\n    stripe: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart,\r\n        auth: state.auth,\r\n        stripe: state.stripe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { removeFromCart, clearCart, placeOrder, addToCart })(CartPage)","export const STRIPE_PUBLISHABLE = 'pk_test_51HI1opH9PLlFARsrME2IYTZG7xTcYBrTRJri7xqbVsmiaNU3UdQcpyCPapkW7Tqz2kxFUtO2XgDxpMAGXBbcjDn600OstLfq3B'","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Divider, Container, Item } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment'\r\n\r\nimport { addToCart } from '../actions/Cart'\r\n\r\nfunction ShowPane(props) {\r\n\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    function handleAddToCart() {\r\n        props.addToCart(props.show, quantity)\r\n        console.log(`Added <b>${props.show.title}</b> into shopping-cart.`)\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"p-3\">\r\n        <Item.Group>\r\n            <Item>\r\n                {/* <Item.Image size='small' src={require(`../assets/images/${props.show.image_path}`)} /> */}\r\n                <Item.Image size='small' src={props.show.poster_img_url} />\r\n                \r\n                <Item.Content>\r\n                    <div className=\"h3 text-white\">{props.show.artists[0].name}</div>\r\n                    <div className=\"h5 text-white\">{ props.show.title }</div>\r\n                    <Divider />\r\n                    <Item.Meta>\r\n                        <div className=\"h5 text-white\"> \r\n                            <Moment \r\n                                interval={0} \r\n                                format=\"MMM Do - LT\"\r\n                                date={props.show.show_datetime}     \r\n                            />\r\n                            <Button size=\"tiny\" color=\"red\" floated='right' onClick={handleAddToCart} className=\"custom-btn\">\r\n                                USD { props.show.show_price }\r\n                            </Button>\r\n                        </div>\r\n                    </Item.Meta>\r\n                </Item.Content>\r\n            </Item>\r\n            </Item.Group>\r\n            {\r\n                props.show.description !== \"No description\" && <div className=\"h4 text-white\">{ props.show.description }</div>\r\n\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nShowPane.propTypes = {\r\n    show: PropTypes.object.isRequired,\r\n    panel: PropTypes.object.isRequired,\r\n    addToCart: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        panel: state.panel\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addToCart})(ShowPane)","import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Header, Form, Button, Container } from 'semantic-ui-react'\r\n\r\nfunction LivePage(props) {\r\n    \r\n    const [ticketId, setTicketId] = useState('')\r\n\r\n    function handleTicketChange(e) {\r\n        const {name, value} = e.target\r\n        setTicketId(value)\r\n    }\r\n\r\n    function handleTicketForm(e) {\r\n        e.preventDefault()\r\n        props.history.push(`/live/${ticketId}`)\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <center className=\"p-5\">\r\n                <div className=\"ticket-form-width\">\r\n                    <div className='text-white h2 p-3'><b>Use your ticket to enter the live show</b></div>\r\n                    <Form>\r\n                        <Form.Input\r\n                            icon='ticket'\r\n                            iconPosition='left'\r\n                            name='ticketId'\r\n                            value={ticketId}\r\n                            placeholder='Enter your ticket Id'\r\n                            onChange={handleTicketChange}\r\n                            size=\"big\"\r\n                        />\r\n                        <Button primary type='submit' onClick={handleTicketForm}>Enter</Button>\r\n                    </Form>\r\n                </div>\r\n            </center>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nLivePage.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(LivePage)","import React from 'react'\r\nimport { Item, Header, Button, Container, Dimmer, Loader, Image } from 'semantic-ui-react'\r\nimport ReactPlayer from \"react-player\"\r\nimport Moment from 'react-moment'\r\nimport moment from 'moment'\r\n\r\nimport Credit from \"./Credits\"\r\nimport NotStreamingIcon from \"../helpers/not_streaming\";\r\n\r\nconst fallbackUrl =\r\n    \"https://bitdash-a.akamaihd.net/content/MI201109210084_1/m3u8s/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.m3u8\";\r\n\r\n\r\nconst playerConfigs = {\r\n    file: {\r\n        forceHLS: true\r\n    }\r\n}\r\n\r\nfunction Player(props) {\r\n\r\n    const videoUrl = fallbackUrl\r\n    \r\n    //             <Container fluid className=\"mb-3\">\r\n    //                 <center>\r\n    //                     <div className=\"player-error\">\r\n    //                         {/* <NotStreamingIcon width={64} height={64} fill='#fa4659' /> */}\r\n    //                         <Loader className=\"m-0 p-0\" size=\"large\" active />\r\n    //                         <p>Stream has not begun...</p>\r\n    //                     </div>\r\n    //                 </center>\r\n    //             </Container>\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Container fluid>\r\n                <div className='player-wrapper p-3'>\r\n                    <ReactPlayer\r\n                        className='player'\r\n                        controls\r\n                        muted\r\n                        config={playerConfigs}\r\n                        url={videoUrl}\r\n                        playing\r\n                        width='100%'\r\n                        height='100%'\r\n                    />\r\n                </div>\r\n            </Container>\r\n\r\n            <Item.Group>\r\n                <Item>\r\n                    <Item.Image size='small' src={ props.liveshow.show.poster_img_url } />\r\n\r\n                    <Item.Content>\r\n                        <div className=\"h2 text-white\">{ props.liveshow.show.title }</div>\r\n                        <div className=\"h4 text-white\">{ props.liveshow.show.artists[0].name }</div>\r\n                        <Item.Description>\r\n                            <div className=\"h5 text-white\"> \r\n                                <Moment fromNow>\r\n                                    {props.liveshow.show.show_datetime} \r\n                                </Moment>\r\n                                <div className=\"h5 text-white\"> \r\n                                    <Moment \r\n                                        interval={0} \r\n                                        format=\"MMM Do - LT\"\r\n                                        date={ props.liveshow.show.show_datetime }     \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Item.Description>\r\n                    </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n\r\n            {/* <div className=\"intro\">\r\n                <div className=\"row p-4\">\r\n                    <div className=\"col\" align=\"right\">\r\n                        <div className=\"player_img\"><Image size=\"small\" src={ props.liveshow.show.poster_img_url } /></div>\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                        <div align=\"left\">\r\n                            <div className=\"display-3\">{ props.liveshow.show.title }</div>\r\n                            <div className=\"h4\">{ props.liveshow.show.artists[0].name }</div>\r\n                            <div className=\"h5 text-white\"> \r\n                                <Moment fromNow>\r\n                                    {props.liveshow.show.show_datetime} \r\n                                </Moment>\r\n                                <div className=\"h5 text-white\"> \r\n                                    <Moment \r\n                                        interval={0} \r\n                                        format=\"MMM Do - LT\"\r\n                                        date={ props.liveshow.show.show_datetime }     \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import axios from 'axios'\r\nimport { LIVESHOW_REQUEST, LIVESHOW_SUCCESS, LIVESHOW_FAILURE, LIVESHOW_CLEAR } from '../constants/ActionTypes'\r\nimport { serverUrl } from '../constants/Common'\r\n\r\nexport const liveshowRequest = (ticketId) => {\r\n    return {\r\n        type: LIVESHOW_REQUEST,\r\n        payload: ticketId\r\n    }\r\n}\r\n\r\nexport const liveshowSuccess = (liveshow) => {\r\n    return {\r\n        type: LIVESHOW_SUCCESS,\r\n        payload: liveshow\r\n    }\r\n}\r\n\r\nexport const liveshowFailure = (error) => {\r\n    return {\r\n        type: LIVESHOW_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const liveshowClear = () => {\r\n    return {\r\n        type: LIVESHOW_CLEAR\r\n    }\r\n}\r\n\r\nexport const fetchLiveShow = (ticketId) => {\r\n    return dispatch => {\r\n        dispatch(liveshowRequest(ticketId))\r\n        axios.get(`${serverUrl}/api/tickets/${ticketId}/ticket/`)\r\n            .then((res) => {\r\n                dispatch(liveshowSuccess(res.data))\r\n                localStorage.setItem('liveshowId', res.data.uuid)\r\n            })\r\n            .catch((err) => {\r\n                dispatch(liveshowFailure(err))\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateLiveShow = (ticketId, active) => {\r\n    axios.patch(`${serverUrl}/api/tickets/${ticketId}/ticket/`, {active: active})\r\n}\r\n\r\nexport const clearLiveShow = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem('liveshowId')\r\n        dispatch(liveshowClear())\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Item, Header, Button, Container, Dimmer, Loader, Image } from 'semantic-ui-react'\r\nimport { useParams, useLocation } from 'react-router-dom'\r\n\r\nimport Player from \"../components/Player\"\r\nimport { fetchLiveShow, updateLiveShow, clearLiveShow } from '../actions/LiveShow'\r\n\r\nfunction PlayerPage(props) {\r\n\r\n    const [liveshow, setLiveShow] = useState(null)\r\n    const {ticket} = useParams()\r\n\r\n    useEffect(() => {\r\n        if (ticket !== undefined) {\r\n            props.fetchLiveShow(ticket)\r\n        }\r\n    }, [ticket]);\r\n\r\n    useEffect(() => {\r\n        if (props.liveshow.data !== undefined) {\r\n            // setLiveShow(props.liveshow.data)\r\n            updateLiveShow(props.liveshow.data.uuid, true)\r\n        }\r\n    }, [props.liveshow])\r\n\r\n    function closeShow(event) {\r\n        event.preventDefault()\r\n        const uuid = localStorage.getItem('liveshowId')\r\n        if (uuid !== undefined) {\r\n            updateLiveShow(uuid, false)\r\n            props.clearLiveShow()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('unload', closeShow)\r\n        return () => {\r\n            const uuid = localStorage.getItem('liveshowId')\r\n            if (uuid !== undefined) {\r\n                updateLiveShow(uuid, false)\r\n                props.clearLiveShow()\r\n            }\r\n            window.removeEventListener('unload', closeShow)\r\n        }\r\n    }, [])\r\n\r\n    function showError(error) {\r\n        if (error.response.status === 404) {\r\n            return <div className=\"text-white\">Ticket not found</div>\r\n        } else if (error.response.status === 423) {\r\n            return <div className=\"text-white\">Ticket is being used on another device</div>\r\n        } else {\r\n            return <div className=\"text-white\">Something went wrong</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-3\">\r\n            { props.liveshow.isLoading && <Dimmer active><Loader /></Dimmer> }\r\n            { props.liveshow.error && showError(props.liveshow.error) }\r\n            { props.liveshow.data !== undefined && <Player liveshow={props.liveshow.data} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth,\r\n        liveshow: state.liveshow\r\n    }\r\n}\r\n\r\nPlayerPage.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    liveshow: PropTypes.object,\r\n    fetchLiveShow: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchLiveShow, clearLiveShow})(PlayerPage)","import React, {useEffect, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Menu, Icon, Label, Image, Button, Responsive } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport MobileDetect from \"mobile-detect\";\r\n\r\nconst DesktopContainer = ({children, getWidth, props}) => (\r\n    <Responsive\r\n        fireOnMount\r\n        getWidth={getWidth}\r\n        minWidth={Responsive.onlyTablet.minWidth}\r\n    >\r\n        <Menu id='navbar' className='menu_background p-4 m-0' size='massive' secondary>\r\n            \r\n            <Menu.Item as={Link} to='/' header>\r\n                <Image src={require('../../assets/images/odiance-logo.svg')} size='small' />\r\n            </Menu.Item>\r\n\r\n            <Menu.Menu position='right'>\r\n                <Menu.Item name='LIVE' color='blue' style={{color:'white'}} as={Link} to='/live'>\r\n                    LIVE\r\n                </Menu.Item>\r\n\r\n                <Menu.Item onClick={()=>props.handleTogglePane('account')}>\r\n                    {\r\n                        props.auth.isAuthenticated ? \r\n                        <Icon size='large' name='user circle' inverted /> :\r\n                        <span className=\"text-white\">LOGIN</span>\r\n                    }\r\n                </Menu.Item>\r\n\r\n                <Menu.Item>\r\n                    <Button onClick={()=>props.handleTogglePane('cart')} icon inverted className=\"cart-btn\">\r\n                        <Icon size='large' name='cart' />\r\n                        <Label style={{zIndex:0}}color='red' floating>{props.itemsInCartCount}</Label>\r\n                    </Button>\r\n                </Menu.Item>\r\n\r\n            </Menu.Menu>\r\n        </Menu>\r\n    </Responsive>\r\n)\r\n\r\nconst MobileContainer = ({children, getWidth, props}) => (\r\n    <Responsive\r\n        fireOnMount\r\n        getWidth={getWidth}\r\n        maxWidth={Responsive.onlyMobile.maxWidth}\r\n    >\r\n        <Menu className='menu_background p-4 m-0' size='massive' secondary>\r\n            \r\n            <Menu.Item as={Link} to='/' header className=\"d-block\">\r\n                <Image src={require('../../assets/images/odiance-logo.svg')} size='small' />\r\n            </Menu.Item>\r\n        </Menu>\r\n        <Menu className='menu_background p-4 m-0' size='massive' secondary>\r\n            <Menu.Item style={{color:'white'}} as={Link} to='/live'>\r\n                LIVE\r\n            </Menu.Item>\r\n\r\n            <Menu.Item as={Link} to='/account'>\r\n                {\r\n                    props.auth.isAuthenticated ? \r\n                    <Icon size='large' name='user circle' inverted /> :\r\n                    <span className=\"text-white\">LOGIN</span>\r\n                }\r\n            </Menu.Item>\r\n\r\n            <Menu.Item>\r\n                <Button as={Link} to='/cart' icon inverted className=\"cart-btn\">\r\n                    <Icon size='large' name='cart' />\r\n                    <Label style={{zIndex:0}}color='red' floating>{props.itemsInCartCount}</Label>\r\n                </Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    </Responsive>\r\n)\r\n\r\nconst ResponsiveContainer = ({ children, getWidth, props }) => {\r\n    return (\r\n    <React.Fragment>\r\n      <DesktopContainer getWidth={getWidth} props={props}>{children}</DesktopContainer>\r\n      <MobileContainer getWidth={getWidth} props={props}>{children}</MobileContainer>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nconst getWidthFactory = isMobileFromSSR => () => {\r\n    const isSSR = typeof window === \"undefined\"\r\n    const ssrValue = isMobileFromSSR ? Responsive.onlyMobile.maxWidth : Responsive.onlyTablet.minWidth\r\n    return isSSR ? ssrValue : window.innerWidth\r\n}\r\n\r\nfunction Navbar(props) {\r\n\r\n    const md = new MobileDetect(window.navigator.userAgent);\r\n    const isMobileFromSSR = !!md.mobile();\r\n\r\n    return (\r\n        <ResponsiveContainer getWidth={getWidthFactory(isMobileFromSSR)} props={props} />\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    showSearch: PropTypes.bool.isRequired,\r\n    itemsInCartCount: PropTypes.number.isRequired,\r\n    shows: PropTypes.array,\r\n    filterShows: PropTypes.func.isRequired,\r\n    handleTogglePane: PropTypes.func.isRequired,\r\n    auth: PropTypes.object\r\n}\r\n\r\nexport default Navbar\r\n\r\n\r\n// function Navbar(props) {\r\n\r\n//     const [initialShows, setInitialShows] = useState([])\r\n\r\n//     useEffect(() => {\r\n//         if (props.shows && (props.shows.length > initialShows.length)) {\r\n//             setInitialShows(props.shows)\r\n//         }\r\n//     }, [props.shows]);\r\n\r\n//     function handleSearchItems(e) {\r\n//         let filteredShows = _.filter(initialShows, (obj) => {\r\n//             return _.includes(obj.title.toLowerCase(), e.target.value.toLowerCase())\r\n//         })\r\n//         props.filterShows(filteredShows)\r\n//     }\r\n\r\n//     return (\r\n//         <Menu id='navbar' className='menu_background p-4 m-0' size='massive' secondary>\r\n            \r\n//             <Menu.Item as={Link} to='/' header>\r\n//                 <Image src={require('../../assets/images/odiance-logo.svg')} size='small' />\r\n//             </Menu.Item>\r\n            \r\n//             <Menu.Item className='search-bar'>\r\n//                 <Input icon={{ name: 'search', link: true }} placeholder='Search...' onChange={handleSearchItems} />\r\n//             </Menu.Item>\r\n\r\n//             <Menu.Menu position='right'>\r\n//                 <Menu.Item name='LIVE' color='blue' style={{color:'white'}} as={Link} to='/live'>\r\n//                     LIVE\r\n//                 </Menu.Item>\r\n\r\n//                 <Menu.Item onClick={()=>props.handleTogglePane('account')}>\r\n//                     {\r\n//                         props.auth.isAuthenticated ? \r\n//                         <Icon size='large' name='user circle' inverted /> :\r\n//                         <span className=\"text-white\">LOGIN</span>\r\n//                     }\r\n//                 </Menu.Item>\r\n\r\n//                 <Menu.Item>\r\n//                     <Button onClick={()=>props.handleTogglePane('cart')} icon inverted className=\"cart-btn\">\r\n//                         <Icon size='large' name='cart' />\r\n//                         <Label style={{zIndex:0}}color='red' floating>{props.itemsInCartCount}</Label>\r\n//                     </Button>\r\n//                 </Menu.Item>\r\n\r\n//                 <Menu.Item>\r\n//                     <Button as={Link} to=\"/cart\">cart</Button>\r\n//                 </Menu.Item>\r\n\r\n//             </Menu.Menu>\r\n//         </Menu>\r\n//     )\r\n// }","import React from 'react'\r\nimport { Menu, Header } from 'semantic-ui-react'\r\n\r\nfunction Footer({className}) {\r\n\r\n    return (\r\n        <Menu className='menu_background p-4 m-0' size='massive' secondary>\r\n            <Menu.Item>        \r\n                <Header as='h4' inverted>Odiance © 2020 Copyright</Header>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Header, Loader, Container, Grid } from 'semantic-ui-react'\r\n\r\nimport { updatePaymentStatus, clearStripe } from '../actions/Stripe'\r\n\r\nfunction Confirm(props) {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const {status, id} = useParams()\r\n    const orderId = localStorage.getItem('orderId')\r\n\r\n    useEffect(() => {\r\n        if (orderId !== null) {\r\n            if (status === 'confirm') {\r\n                props.updatePaymentStatus(orderId, 2)\r\n            } else if (status === 'cancel') {\r\n                props.updatePaymentStatus(orderId, 3)\r\n                setTimeout(() => {\r\n                    props.history.push('/')\r\n                }, 3000)\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if ('status' in props.stripe) {\r\n            if (props.stripe.status === true) {\r\n                setLoading(false)\r\n                props.clearStripe()\r\n                setTimeout(() => {\r\n                    props.history.push('/')\r\n                }, 5000)\r\n            } else if (props.stripe.status === false) {\r\n                props.clearStripe()\r\n                setLoading(false)\r\n                setErrorMessage('Something went wrong on our side. Please contact support to get it resolved. Sorry for the inconvenience.')\r\n            }\r\n        }\r\n    }, [props.stripe])\r\n\r\n    const messageDiv = () => {\r\n        if (errorMessage === '') {\r\n            return (\r\n                <div>\r\n                    <Header size=\"huge\" inverted>Thank You!</Header>\r\n                    <Header size=\"medium\" inverted>\r\n                        For supporting artists and performers through Odiance.\r\n                        <br></br>\r\n                        Enjoy the show.\r\n                    </Header>\r\n                    <br></br>\r\n                    <Header size=\"small\" inverted>\r\n                        You will receive an email shortly that is both your receipt and will\r\n                        include your unique links for each ticket you have purchased for this\r\n                        performance.\r\n                    </Header>\r\n                    <Header size=\"tiny\" inverted>We are redirecting you to the home page...</Header>\r\n                </div>\r\n                )\r\n        } else {\r\n            return <Header size=\"medium\" color=\"yellow\">{errorMessage}</Header>\r\n        }\r\n    }\r\n\r\n    const confirmDiv = () => {\r\n        if (loading) {\r\n            return <Header size=\"medium\" inverted>Processing your tickets now</Header>\r\n        } else {\r\n            return messageDiv()\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container className='p-5' textAlign='center'>\r\n            <Grid centered>\r\n            <Grid.Row>\r\n            {\r\n                loading && <Loader active /> \r\n            }\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n            {\r\n                status === 'confirm' ?\r\n                confirmDiv() :\r\n                <div>\r\n                    <Header size=\"medium\" inverted>We're cancelling your order.</Header>\r\n                    <Header size=\"tiny\" inverted>We are redirecting you to the home page...</Header>\r\n                </div>\r\n            }\r\n            </Grid.Row>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    stripe: PropTypes.object.isRequired,\r\n    updatePaymentStatus: PropTypes.func.isRequired,\r\n    clearStripe: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stripe: state.stripe\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updatePaymentStatus, clearStripe })(Confirm)","import React, {useEffect, useState } from 'react';\nimport { useLocation, Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Container, Responsive } from 'semantic-ui-react'\nimport ReactGA from 'react-ga';\n// import { render } from \"react-dom\";\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\n// import classNames from 'classnames'\n\n\nimport Home from './Home';\nimport AccountPage from './AccountPage';\nimport CartPage from './CartPage'\nimport ShowPane from './ShowPane'\nimport LivePage from './LivePage'\nimport PlayerPage from './PlayerPage'\nimport Header from '../components/Navs/Header';\nimport Footer from '../components/Navs/Footer';\nimport Confirm from '../components/Confirm.js'\nimport { filterShows } from '../actions/Shows'\nimport { checkAuthorizationToken } from '../actions/Auth'\n\n// Initialize Google Analytics\nReactGA.initialize(process.env.REACT_APP_GA_CODE);\n\nfunction trackPage (page) {\n  ReactGA.set({ page });\n  ReactGA.pageview(page);\n};\n\nfunction App(props) {\n\n  const [showSearch, setShowSearch] = useState(true)\n  const [isPaneOpen, setPaneOpen] = useState(false)\n  const [paneComponent, setPaneComponent] = useState('')\n  const [focusShow, setFocusShow] = useState({})\n  const [hidePaneCloseButton, setHidePaneCloseButton] = useState(true)\n  const [paneWidth, setPaneWidth] = useState('500px')\n\n  let location = useLocation();\n  const w = window.outerWidth\n\n  function togglePane(componentName) {\n    setPaneComponent(componentName)\n    setPaneOpen(true)\n  }\n\n  function displayComponent() {\n    if (paneComponent === 'account') {\n      return <AccountPage />\n    } else if (paneComponent === 'cart') {\n      return <CartPage handleTogglePane={togglePane} />\n    } else if (paneComponent === 'show') {\n      return <ShowPane show={focusShow} />\n    }\n  }\n\n  useEffect(() => {\n    const page = location.pathname;\n    trackPage(page);\n\n    if (page !== '/') {\n      setShowSearch(false)\n    } else {\n      setShowSearch(true)\n    }\n  }, [location]);\n\n  useEffect(() => {\n    if (localStorage.jwtToken) {\n      props.checkAuthorizationToken(localStorage.jwtToken)\n    }\n    if (w <= Responsive.onlyMobile.maxWidth) {\n      setPaneWidth('320px')\n      setHidePaneCloseButton(false)\n    } else {\n      setPaneWidth('500px')\n      setHidePaneCloseButton(true)\n    }\n  }, [])\n\n  useEffect(() => {\n    if ('id' in props.panel) {\n      togglePane('show')\n      \n      const show = props.shows.filter(obj => {\n        return obj.id === props.panel.id\n      })\n\n      if (show.length !== 0) {\n        setFocusShow(show[0])\n      }\n    }\n  }, [props.panel])\n\n  return (\n    <div>\n      <Header\n        auth={props.auth}\n        showSearch={showSearch}\n        itemsInCartCount={props.itemsInCartCount}\n        shows={props.shows}\n        filterShows={props.filterShows}\n        handleTogglePane={togglePane} \n      />\n      \n      <div className='home-background'>\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/shows/:slug\" component={Home} />\n            <Route exact path=\"/tickets/:status/:id\" component={Confirm} />\n            <Route exact path=\"/live\" component={LivePage} />\n            <Route path=\"/live/:ticket\" component={PlayerPage} />\n            <Route exact path=\"/cart\">\n                <CartPage handleTogglePane={togglePane} />\n            </Route>\n            <Route exact path=\"/account\" component={AccountPage} />\n        </Switch>\n      </div>\n\n      <SlidingPane\n        className=\"pane-background\"\n        overlayClassName=\"some-custom-overlay-class\"\n        isOpen={isPaneOpen}\n        title=\"Go Back\"\n        // subtitle=\"Optional subtitle.\"\n        onRequestClose={() => {setPaneOpen(false)}}\n        width={paneWidth}\n        hideHeader={hidePaneCloseButton}\n        children={displayComponent()}\n      />\n      \n      <Footer />\n\n    </div>\n  )\n}\n\nApp.propTypes = {\n  itemsInCartCount: PropTypes.number.isRequired,\n  shows: PropTypes.array,\n  filterShows: PropTypes.func.isRequired,\n  checkAuthorizationToken: PropTypes.func.isRequired,\n  panel: PropTypes.object.isRequired,\n  auth: PropTypes.object\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      itemsInCartCount: state.cart.length,\n      shows: state.shows.data,\n      panel: state.panel,\n      auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps, { filterShows, checkAuthorizationToken })(App);","import { FETCH_SHOWS_REQUEST, FETCH_SHOWS_SUCCESS, FETCH_SHOWS_FAILURE, FILTER_SHOWS } from '../constants/ActionTypes'\r\n\r\nconst shows = (state={}, action={}) => {\r\n    switch(action.type) {\r\n        case FETCH_SHOWS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case FETCH_SHOWS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: action.payload\r\n            }\r\n        case FETCH_SHOWS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n        case FILTER_SHOWS:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default shows","import _ from 'lodash'\r\n\r\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE } from '../constants/ActionTypes'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\n\r\nconst auth = (state=initialState, action={}) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...initialState,\r\n                loading: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                isAuthenticated: !_.isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n        case LOGIN_FAILURE:\r\n            return {\r\n                ...initialState,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default auth","import { ADD_TO_CART, REMOVE_FROM_CART, CLEAR_CART } from '../constants/ActionTypes'\r\nimport shortid from 'shortid'\r\nimport _ from 'lodash'\r\n\r\nconst cart = (state=[], action={}) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n            if (_.filter(state, (obj) => obj.show.title === action.payload.show.title).length > 0) {\r\n                let newState = state.slice()\r\n                for (let i=0; i<newState.length; i++) {\r\n                    if (newState[i].show.title === action.payload.show.title) {\r\n                        if (action.payload.quantity < 0 && newState[i].quantity === 1) {\r\n                            continue\r\n                        }\r\n                        newState[i].quantity += action.payload.quantity\r\n                    }\r\n                }\r\n\r\n                return newState\r\n            }\r\n\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: shortid.generate(),\r\n                    show: action.payload.show,\r\n                    quantity: action.payload.quantity\r\n                }\r\n            ]\r\n        \r\n        case REMOVE_FROM_CART:\r\n            var idx = _.findIndex(state, { id: action.payload.id })\r\n            if (idx >= 0) {\r\n                return [\r\n                    ...state.slice(0, idx),\r\n                    ...state.slice(idx + 1)\r\n                ]\r\n            }\r\n\r\n            return state\r\n\r\n        case CLEAR_CART:\r\n            return []\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cart","import { FETCH_ORDERS_REQUEST, FETCH_ORDERS_SUCCESS, FETCH_ORDERS_FAILURE } from '../constants/ActionTypes'\r\n\r\nconst account = (state={}, action={}) => {\r\n    switch (action.type) {\r\n        case FETCH_ORDERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n\r\n        case FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: action.payload\r\n            }\r\n\r\n        case FETCH_ORDERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default account","import { SET_STRIPE_CHECKOUT, SET_PAYMENT_STATUS, CLEAR_STRIPE } from '../constants/ActionTypes'\r\n\r\nconst stripe = (state={}, action={}) => {\r\n    switch(action.type) {\r\n        case SET_STRIPE_CHECKOUT:\r\n            return {\r\n                checkoutId: action.payload.checkoutId\r\n            }\r\n        case SET_PAYMENT_STATUS:\r\n            return {\r\n                status: action.payload\r\n            }\r\n        case CLEAR_STRIPE:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default stripe","import { SET_SHOW } from '../constants/ActionTypes'\r\n\r\nconst panel = (state={}, action={}) => {\r\n    switch (action.type) {\r\n        case SET_SHOW:\r\n            return {\r\n                id: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default panel","import { FETCH_TICKETS_REQUEST, FETCH_TICKETS_SUCCESS, FETCH_TICKETS_FAILURE } from '../constants/ActionTypes'\r\n\r\nconst tickets = (state={}, action={}) => {\r\n    switch (action.type) {\r\n        case FETCH_TICKETS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n\r\n        case FETCH_TICKETS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: action.payload\r\n            }\r\n\r\n        case FETCH_TICKETS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default tickets","import { SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAILURE } from '../constants/ActionTypes'\r\n\r\nconst initialState = {}\r\n\r\nconst signup = (state=initialState, action={}) => {\r\n    switch (action.type) {\r\n        case SIGNUP_REQUEST:\r\n            return {\r\n                ...initialState,\r\n                loading: true\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...initialState,\r\n                success: true\r\n            }\r\n        case SIGNUP_FAILURE:\r\n            return {\r\n                ...initialState,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default signup","import { LIVESHOW_REQUEST, LIVESHOW_SUCCESS, LIVESHOW_FAILURE, LIVESHOW_CLEAR } from '../constants/ActionTypes'\r\n\r\nconst liveshow = (state={}, action={}) => {\r\n    switch(action.type) {\r\n        case LIVESHOW_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case LIVESHOW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: action.payload\r\n            }\r\n        case LIVESHOW_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n        case LIVESHOW_CLEAR:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default liveshow","import { combineReducers } from 'redux'\r\n\r\nimport shows from './Shows'\r\nimport auth from './Auth'\r\nimport cart from './Cart'\r\nimport account from './Account'\r\nimport stripe from './Stripe'\r\nimport panel from './Panel'\r\nimport tickets from './Tickets'\r\nimport signup from './SignUp'\r\nimport liveshow from './LiveShow'\r\n\r\nconst rootReducer = combineReducers({\r\n    shows,\r\n    auth,\r\n    cart,\r\n    account,\r\n    stripe,\r\n    panel,\r\n    tickets,\r\n    signup,\r\n    liveshow\r\n})\r\n\r\nexport default rootReducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport jwtDecode from 'jwt-decode'\n\nimport App from './containers/App'\nimport rootReducer from './reducers/index'\nimport { loginSuccess, setAuthorizationToken } from './actions/Auth'\n\nimport * as serviceWorker from './serviceWorker'\nimport './assets/scss/style.scss'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n      applyMiddleware(thunk)\n  )\n)\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken)\n  store.dispatch(loginSuccess(jwtDecode(localStorage.jwtToken)))\n}\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/odiance-logo.98fd036a.svg\";"],"sourceRoot":""}